Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn -command stop.
Starting...
Compute time: 4.40361
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-35815-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-35815-quartz1822.sc' filvtune: Executing actions 12 % Loading '35815-35820.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-35820-32d0d802.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `pinbin'               vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/bin64/pinbin'.
vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 20 % Resolving information for `euler3d_cpu'          vtune: Executing actions 20 % Resolving information for `libpin3dwarf.so'      
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 6.780s
    Paused Time: 0s
Effective CPU Utilization: 20.9% (15.057 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 6.780
        Serial Time (outside parallel regions): 2.564s (37.8%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           1.130s
            std::istream::_M_extract<float>  libstdc++.so.6           0.440s
            __kmp_join_call                  libiomp5.so              0.200s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.180s
            std::istream::operator>>         libstdc++.so.6           0.060s
            [Others]                         N/A                      0.080s
        Parallel Region Time: 4.216s (62.2%)
            Estimated Ideal Time: 3.685s (54.3%)
            OpenMP Potential Gain: 0.531s (7.8%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 45.581s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                       Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        --------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 45.555s                        100.0%          67
        Stream 0xe05e5d58                                              0.019s                        100.0%          30
        Stream 0x24647b5a                                              0.002s                        100.0%           1
        Stream density_energy 0x78491cd7                               0.001s                        100.0%           1
        Stream momentum 0x106ea845                                     0.001s                        100.0%           1
        [Others]                                                       0.003s                        100.0%          21
    Spin and Overhead Time: 66.713s (39.8% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function                                                              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------------------------------------------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier                                                    libiomp5.so                 52.573s                 31.4%
        [OpenMP dispatcher]                                                   libiomp5.so                  9.147s                  5.5%
        __kmp_join_barrier                                                    libiomp5.so                  1.569s                  0.9%
        __kmp_fork_call                                                       libiomp5.so                  1.043s                  0.6%
        _INTERNAL_26_______src_kmp_dispatch_cpp_20354e55::test_then_inc<int>  libiomp5.so                  0.500s                  0.3%
        [Others]                                                              N/A                          1.881s                  1.1%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 22 MB 
    Collection start time: 02:50:26 22/04/2021 UTC
    Collection stop time: 02:50:34 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn > euler3d_cpu-log/vtune/36_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn -command stop.
Starting...
Compute time: 3.74352
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-35942-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-35942-quartz1822.sc' filvtune: Executing actions 12 % Loading '35957.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-35957-7174b8d5.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 5.350s
    SP GFLOPS: 36.608
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.936
    Average CPU Frequency: 2.611 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 46.5% (16.729 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 30.4% (21.891 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.735s (32.4%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                                                        Module               Serial CPU Time
        --------------------------------------------------------------  -------------------  ---------------
        [Outside any known module]                                      [Unknown]                     0.601s
        [Loop@0x4064b2 in compute_flux]                                 euler3d_cpu                   0.090s
        ____strtof_l_internal                                           libc-2.17.so                  0.090s
        __GI___printf_fp_l                                              libc-2.17.so                  0.035s
        std::istreambuf_iterator<char, std::char_traits<char>>::_M_get  libstdc++.so.6.0.20           0.035s
        [Others]                                                        N/A                           0.631s
    Parallel Region Time: 3.614s (67.6%)
        Estimated Ideal Time: 3.244s (60.6%)
        OpenMP Potential Gain: 0.371s (6.9%)
Memory Bound: 33.3% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 13.6% of Clockticks
    DRAM Bound: 1.6% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 17.6% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 82.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.706
    FP Arith/Mem Wr Instr. Ratio: 1.632
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 58 MB 
    Collection start time: 02:50:58 22/04/2021 UTC
    Collection stop time: 02:51:04 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn > euler3d_cpu-log/vtune/36_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn -command stop.
Starting...
Compute time: 5.97941
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-36080-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-36080-quartz1822.sc' filvtune: Executing actions 12 % Loading '36080-36085.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-36085-5a3f0258.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 8.071s
    Paused Time: 0s
Effective CPU Utilization: 14.5% (10.439 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 8.071
        Serial Time (outside parallel regions): 2.291s (28.4%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           1.070s
            std::istream::_M_extract<float>  libstdc++.so.6           0.390s
            __kmp_join_call                  libiomp5.so              0.211s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.190s
            __kmp_get_global_thread_id_reg   libiomp5.so              0.040s
            [Others]                         N/A                      0.100s
        Parallel Region Time: 5.780s (71.6%)
            Estimated Ideal Time: 5.381s (66.7%)
            OpenMP Potential Gain: 0.399s (4.9%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 20.736s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                       Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        --------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 20.726s                        100.0%          30
        Stream momentum 0x106ea845                                     0.002s                        100.0%           1
        Stream density_energy 0x78491cd7                               0.002s                        100.0%           1
        Stream density 0xd11e7140                                      0.002s                        100.0%           1
        Stream 0x24647b5a                                              0.002s                        100.0%           1
        [Others]                                                       0.002s                        100.0%          18
    Spin and Overhead Time: 28.974s (25.7% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function             Module       Spin and Overhead Time  (% from CPU Time)(%)
        -------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier   libiomp5.so                 23.321s                 20.7%
        [OpenMP dispatcher]  libiomp5.so                  2.710s                  2.4%
        __kmp_fork_call      libiomp5.so                  0.882s                  0.8%
        __kmp_join_barrier   libiomp5.so                  0.760s                  0.7%
        __kmp_join_call      libiomp5.so                  0.311s                  0.3%
        [Others]             N/A                          0.991s                  0.9%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 20 MB 
    Collection start time: 02:51:28 22/04/2021 UTC
    Collection stop time: 02:51:36 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn > euler3d_cpu-log/vtune/18_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn -command stop.
Starting...
Compute time: 4.85652
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-36184-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-36184-quartz1822.sc' filvtune: Executing actions 12 % Loading '36198.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-36198-f358da67.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 6.332s
    SP GFLOPS: 37.751
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.655
    Average CPU Frequency: 2.626 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 35.7% (12.842 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 18.0% (12.933 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.606s (25.4%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                                 Module        Serial CPU Time
        ---------------------------------------  ------------  ---------------
        [Outside any known module]               [Unknown]              0.556s
        ____strtof_l_internal                    libc-2.17.so           0.070s
        [Loop@0x4064b2 in compute_flux]          euler3d_cpu            0.065s
        [Loop@0x3d9a0 in ____strtof_l_internal]  libc-2.17.so           0.065s
        _IO_vfprintf                             libc-2.17.so           0.035s
        [Others]                                 N/A                    0.596s
    Parallel Region Time: 4.726s (74.6%)
        Estimated Ideal Time: 4.472s (70.6%)
        OpenMP Potential Gain: 0.254s (4.0%)
Memory Bound: 36.4% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 9.8% of Clockticks
    DRAM Bound: 2.9% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 22.4% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 77.6% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.963
    FP Arith/Mem Wr Instr. Ratio: 2.301
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 48 MB 
    Collection start time: 02:51:56 22/04/2021 UTC
    Collection stop time: 02:52:03 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn > euler3d_cpu-log/vtune/18_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn -command stop.
Starting...
Compute time: 9.07495
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-36303-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-36303-quartz1822.sc' filvtune: Executing actions 12 % Loading '36303-36309.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-36309-c46f7bc6.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 10.994s
    Paused Time: 0s
Effective CPU Utilization: 9.1% (6.540 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 10.994
        Serial Time (outside parallel regions): 2.106s (19.2%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           1.070s
            std::istream::_M_extract<float>  libstdc++.so.6           0.430s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.190s
            __kmp_join_call                  libiomp5.so              0.170s
            __kmp_get_global_thread_id_reg   libiomp5.so              0.040s
            [Others]                         N/A                      0.030s
        Parallel Region Time: 8.888s (80.8%)
            Estimated Ideal Time: 8.669s (78.8%)
            OpenMP Potential Gain: 0.220s (2.0%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 9.066s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                        Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                   9.056s                        100.0%          13
        Stream momentum 0x106ea845                                                      0.002s                        100.0%           1
        Stream ../../data/cfd/fvcorr.domn.097K 0x06cf4c56                               0.002s                        100.0%           1
        Stream density 0xd11e7140                                                       0.002s                        100.0%           1
        Stream density_energy 0x78491cd7                                                0.001s                        100.0%           1
        [Others]                                                                        0.002s                        100.0%          21
    Spin and Overhead Time: 13.172s (15.5% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function             Module       Spin and Overhead Time  (% from CPU Time)(%)
        -------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier   libiomp5.so                 10.810s                 12.7%
        __kmp_fork_call      libiomp5.so                  0.753s                  0.9%
        [OpenMP dispatcher]  libiomp5.so                  0.500s                  0.6%
        __kmp_join_barrier   libiomp5.so                  0.410s                  0.5%
        __kmp_join_call      libiomp5.so                  0.210s                  0.2%
        [Others]             N/A                          0.489s                  0.6%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 19 MB 
    Collection start time: 02:52:25 22/04/2021 UTC
    Collection stop time: 02:52:37 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn > euler3d_cpu-log/vtune/9_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn -command stop.
Starting...
Compute time: 8.087
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-36399-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-36399-quartz1822.sc' filvtune: Executing actions 12 % Loading '36413.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-36413-68373ee8.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 9.464s
    SP GFLOPS: 25.523
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.596
    Average CPU Frequency: 2.809 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 20.5% (7.397 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 10.3% (7.427 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.501s (15.9%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                                 Module        Serial CPU Time
        ---------------------------------------  ------------  ---------------
        [Outside any known module]               [Unknown]              0.496s
        [Loop@0x4064b2 in compute_flux]          euler3d_cpu            0.080s
        ____strtof_l_internal                    libc-2.17.so           0.075s
        __GI___printf_fp_l                       libc-2.17.so           0.055s
        [Loop@0x3d9a0 in ____strtof_l_internal]  libc-2.17.so           0.045s
        [Others]                                 N/A                    0.581s
    Parallel Region Time: 7.963s (84.1%)
        Estimated Ideal Time: 7.745s (81.8%)
        OpenMP Potential Gain: 0.218s (2.3%)
Memory Bound: 35.2% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 9.3% of Clockticks
    DRAM Bound: 2.6% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 23.8% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 76.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.036
    FP Arith/Mem Wr Instr. Ratio: 2.601
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 44 MB 
    Collection start time: 02:52:54 22/04/2021 UTC
    Collection stop time: 02:53:03 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn > euler3d_cpu-log/vtune/9_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn -command stop.
Starting...
Compute time: 16.7915
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-36512-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-36512-quartz1822.sc' filvtune: Executing actions 12 % Loading '36512-36517.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-36517-92a7f475.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 18.588s
    Paused Time: 0s
Effective CPU Utilization: 4.8% (3.440 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 18.588
        Serial Time (outside parallel regions): 1.972s (10.6%)

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           0.970s
            std::istream::_M_extract<float>  libstdc++.so.6           0.390s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.180s
            __kmp_join_call                  libiomp5.so              0.170s
            std::istream::operator>>         libstdc++.so.6           0.050s
            [Others]                         N/A                      0.070s
        Parallel Region Time: 16.616s (89.4%)
            Estimated Ideal Time: 16.426s (88.4%)
            OpenMP Potential Gain: 0.190s (1.0%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 3.088s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                    Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -----------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                               3.071s                        100.0%           3
        Stream 0x8c39dc02                                           0.008s                        100.0%          16
        Stream momentum 0x106ea845                                  0.002s                        100.0%           1
        Stream density 0xd11e7140                                   0.002s                        100.0%           1
        Stream 0x24647b5a                                           0.002s                        100.0%           1
        [Others]                                                    0.003s                        100.0%           9
    Spin and Overhead Time: 5.435s (7.8% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function             Module       Spin and Overhead Time  (% from CPU Time)(%)
        -------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier   libiomp5.so                  3.851s                  5.6%
        __kmp_fork_call      libiomp5.so                  0.714s                  1.0%
        [OpenMP dispatcher]  libiomp5.so                  0.270s                  0.4%
        __kmp_join_call      libiomp5.so                  0.220s                  0.3%
        __kmp_join_barrier   libiomp5.so                  0.110s                  0.2%
        [Others]             N/A                          0.271s                  0.4%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 19 MB 
    Collection start time: 02:53:25 22/04/2021 UTC
    Collection stop time: 02:53:43 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn > euler3d_cpu-log/vtune/4_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.097K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn -command stop.
Starting...
Compute time: 16.3741
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-36607-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-36607-quartz1822.sc' filvtune: Executing actions 12 % Loading '36621.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-36621-cbfdde42.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 17.753s
    SP GFLOPS: 13.972
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.597
    Average CPU Frequency: 3.114 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.1% (3.618 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.0% (3.618 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.496s (8.4%)

        Top Serial Hotspots (outside parallel regions)
        Function                         Module        Serial CPU Time
        -------------------------------  ------------  ---------------
        [Outside any known module]       [Unknown]              0.426s
        ____strtof_l_internal            libc-2.17.so           0.060s
        [Loop@0x4024a7 in main]          euler3d_cpu            0.050s
        __GI___printf_fp_l               libc-2.17.so           0.045s
        [Loop@0x4064b2 in compute_flux]  euler3d_cpu            0.040s
        [Others]                         N/A                    0.762s
    Parallel Region Time: 16.258s (91.6%)
        Estimated Ideal Time: 16.084s (90.6%)
        OpenMP Potential Gain: 0.174s (1.0%)
Memory Bound: 37.0% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 6.8% of Clockticks
    DRAM Bound: 5.7% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 25.0% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 75.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.103
    FP Arith/Mem Wr Instr. Ratio: 2.797
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/fvcorr.domn.097K" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 40 MB 
    Collection start time: 02:54:00 22/04/2021 UTC
    Collection stop time: 02:54:18 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn > euler3d_cpu-log/vtune/4_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn > euler3d_cpu-log/vtune/36_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn > euler3d_cpu-log/vtune/36_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn > euler3d_cpu-log/vtune/18_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn > euler3d_cpu-log/vtune/18_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn > euler3d_cpu-log/vtune/9_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn > euler3d_cpu-log/vtune/9_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn > euler3d_cpu-log/vtune/4_fvcorr.domn_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn --  euler3d_cpu ../../data/cfd/fvcorr.domn.193K 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Fatal error: The specified result directory already contains result data. Provide another result directory.
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn > euler3d_cpu-log/vtune/4_fvcorr.domn_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_fvcorr.domn'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_36_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_missile.domn.0 -command stop.
Starting...
Compute time: 7.88303
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37030-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37030-quartz1822.sc' filvtune: Executing actions 12 % Loading '37030-37035.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-37035-e84fecad.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 20 % Resolving information for `libstdc++.so.6'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 22 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 12.547s
    Paused Time: 0s
Effective CPU Utilization: 25.6% (18.459 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 12.547
        Serial Time (outside parallel regions): 4.862s (38.8%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           2.520s
            std::istream::_M_extract<float>  libstdc++.so.6           1.070s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.310s
            __kmp_join_call                  libiomp5.so              0.290s
            std::istream::operator>>         libstdc++.so.6           0.100s
            [Others]                         N/A                      0.150s
        Parallel Region Time: 7.685s (61.2%)
            Estimated Ideal Time: 7.078s (56.4%)
            OpenMP Potential Gain: 0.607s (4.8%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 102.200s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                         Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        --------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x92489eb7                                                  102.167s                        100.0%          66
        Stream 0xe05e5d58                                                                0.023s                        100.0%          61
        Stream momentum 0x106ea845                                                       0.002s                        100.0%           1
        Stream ../../data/cfd/missile.domn.0.2M 0x06cf4c56                               0.002s                        100.0%           1
        Stream density 0xd11e7140                                                        0.002s                        100.0%           1
        [Others]                                                                         0.004s                        100.0%          32
    Spin and Overhead Time: 64.791s (22.0% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function                                                              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------------------------------------------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier                                                    libiomp5.so                 49.620s                 16.8%
        [OpenMP dispatcher]                                                   libiomp5.so                  9.499s                  3.2%
        __kmp_join_barrier                                                    libiomp5.so                  1.880s                  0.6%
        __kmp_fork_call                                                       libiomp5.so                  0.942s                  0.3%
        _INTERNAL_26_______src_kmp_dispatch_cpp_20354e55::test_then_inc<int>  libiomp5.so                  0.570s                  0.2%
        [Others]                                                              N/A                          2.280s                  0.8%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 25 MB 
    Collection start time: 02:55:30 22/04/2021 UTC
    Collection stop time: 02:55:43 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_36_missile.domn.0 > euler3d_cpu-log/vtune/36_missile.domn.0_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_36_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_36_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_missile.domn.0 -command stop.
Starting...
Compute time: 6.88422
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37160-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37160-quartz1822.sc' filvtune: Executing actions 12 % Loading '37174.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-37174-48b6d861.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 9.726s
    SP GFLOPS: 58.743
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.763
    Average CPU Frequency: 2.599 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 64.5% (23.206 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 33.0% (23.735 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 2.982s (30.7%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                                                        Module               Serial CPU Time
        --------------------------------------------------------------  -------------------  ---------------
        [Outside any known module]                                      [Unknown]                     1.238s
        [Loop@0x4064b2 in compute_flux]                                 euler3d_cpu                   0.135s
        ____strtof_l_internal                                           libc-2.17.so                  0.090s
        [Loop@0x3d9a0 in ____strtof_l_internal]                         libc-2.17.so                  0.065s
        std::istreambuf_iterator<char, std::char_traits<char>>::_M_get  libstdc++.so.6.0.20           0.050s
        [Others]                                                        N/A                           1.193s
    Parallel Region Time: 6.744s (69.3%)
        Estimated Ideal Time: 6.346s (65.2%)
        OpenMP Potential Gain: 0.398s (4.1%)
Memory Bound: 40.4% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 11.4% of Clockticks
    DRAM Bound: 3.8% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 22.6% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 77.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.962
    FP Arith/Mem Wr Instr. Ratio: 2.217
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 93 MB 
    Collection start time: 02:56:06 22/04/2021 UTC
    Collection stop time: 02:56:16 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_36_missile.domn.0 > euler3d_cpu-log/vtune/36_missile.domn.0_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_36_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_18_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_missile.domn.0 -command stop.
Starting...
Compute time: 11.8153
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37304-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37304-quartz1822.sc' filvtune: Executing actions 12 % Loading '37304-37309.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-37309-b3127a0a.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 15.870s
    Paused Time: 0s
Effective CPU Utilization: 16.6% (11.960 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 15.870
        Serial Time (outside parallel regions): 4.251s (26.8%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           2.180s
            std::istream::_M_extract<float>  libstdc++.so.6           0.990s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.340s
            __kmp_join_call                  libiomp5.so              0.291s
            std::istream::operator>>         libstdc++.so.6           0.110s
            [Others]                         N/A                      0.130s
        Parallel Region Time: 11.620s (73.2%)
            Estimated Ideal Time: 11.216s (70.7%)
            OpenMP Potential Gain: 0.404s (2.5%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 42.685s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                         Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        --------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                   42.674s                        100.0%          30
        Stream momentum 0x106ea845                                                       0.003s                        100.0%           1
        Stream ../../data/cfd/missile.domn.0.2M 0x06cf4c56                               0.002s                        100.0%           1
        Stream density 0xd11e7140                                                        0.002s                        100.0%           1
        Stream density_energy 0x78491cd7                                                 0.002s                        100.0%           1
        [Others]                                                                         0.002s                        100.0%          25
    Spin and Overhead Time: 30.514s (13.9% of CPU Time)
     | A significant portion of CPU time is spent waiting. Use this metric to
     | discover which synchronizations are spinning. Consider adjusting spin
     | wait parameters, changing the lock implementation (for example, by
     | backing off then descheduling), or adjusting the synchronization
     | granularity.
     |

        Top Functions with Spin or Overhead Time
        Function             Module       Spin and Overhead Time  (% from CPU Time)(%)
        -------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier   libiomp5.so                 24.260s                 11.0%
        [OpenMP dispatcher]  libiomp5.so                  2.400s                  1.1%
        __kmp_join_barrier   libiomp5.so                  1.190s                  0.5%
        __kmp_fork_call      libiomp5.so                  0.882s                  0.4%
        __kmp_join_call      libiomp5.so                  0.431s                  0.2%
        [Others]             N/A                          1.351s                  0.6%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 23 MB 
    Collection start time: 02:56:42 22/04/2021 UTC
    Collection stop time: 02:56:58 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_18_missile.domn.0 > euler3d_cpu-log/vtune/18_missile.domn.0_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_18_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_18_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_missile.domn.0 -command stop.
Starting...
Compute time: 10.886
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37415-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37415-quartz1822.sc' filvtune: Executing actions 12 % Loading '37430.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-37430-0f441429.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 13.861s
    SP GFLOPS: 42.206
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.625
    Average CPU Frequency: 2.607 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 38.2% (13.739 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 19.1% (13.770 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 3.109s (22.4%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                                                        Module               Serial CPU Time
        --------------------------------------------------------------  -------------------  ---------------
        [Outside any known module]                                      [Unknown]                     1.208s
        ____strtof_l_internal                                           libc-2.17.so                  0.170s
        [Loop@0x4064b2 in compute_flux]                                 euler3d_cpu                   0.125s
        [Loop@0x3d9a0 in ____strtof_l_internal]                         libc-2.17.so                  0.095s
        std::istreambuf_iterator<char, std::char_traits<char>>::_M_get  libstdc++.so.6.0.20           0.075s
        [Others]                                                        N/A                           1.268s
    Parallel Region Time: 10.752s (77.6%)
        Estimated Ideal Time: 10.483s (75.6%)
        OpenMP Potential Gain: 0.269s (1.9%)
Memory Bound: 37.2% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 8.6% of Clockticks
    DRAM Bound: 3.8% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 24.1% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 75.9% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.051
    FP Arith/Mem Wr Instr. Ratio: 2.518
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 81 MB 
    Collection start time: 02:57:18 22/04/2021 UTC
    Collection stop time: 02:57:32 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_18_missile.domn.0 > euler3d_cpu-log/vtune/18_missile.domn.0_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_18_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_9_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_missile.domn.0 -command stop.
Starting...
Compute time: 19.1213
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37545-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37545-quartz1822.sc' filvtune: Executing actions 12 % Loading '37545-37550.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-37550-06b6efeb.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' 
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 20 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `euler3d_cpu'          vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 23.030s
    Paused Time: 0s
Effective CPU Utilization: 9.9% (7.093 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 23.030
        Serial Time (outside parallel regions): 4.101s (17.8%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           2.290s
            std::istream::_M_extract<float>  libstdc++.so.6           0.930s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.230s
            __kmp_join_call                  libiomp5.so              0.200s
            std::istream::operator>>         libstdc++.so.6           0.090s
            [Others]                         N/A                      0.160s
        Parallel Region Time: 18.930s (82.2%)
            Estimated Ideal Time: 18.681s (81.1%)
            OpenMP Potential Gain: 0.249s (1.1%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 19.830s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                         Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        --------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                   19.819s                        100.0%          11
        Stream density 0xd11e7140                                                        0.002s                        100.0%           1
        Stream ../../data/cfd/missile.domn.0.2M 0x06cf4c56                               0.002s                        100.0%           1
        Stream density_energy 0x78491cd7                                                 0.002s                        100.0%           1
        Stream momentum 0x106ea845                                                       0.002s                        100.0%           1
        [Others]                                                                         0.001s                        100.0%          14
    Spin and Overhead Time: 14.163s (8.0% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function             Module       Spin and Overhead Time  (% from CPU Time)(%)
        -------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier   libiomp5.so                 11.269s                  6.4%
        __kmp_fork_call      libiomp5.so                  0.993s                  0.6%
        [OpenMP dispatcher]  libiomp5.so                  0.570s                  0.3%
        __kmp_join_call      libiomp5.so                  0.320s                  0.2%
        __kmp_join_barrier   libiomp5.so                  0.289s                  0.2%
        [Others]             N/A                          0.722s                  0.4%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 22 MB 
    Collection start time: 02:57:56 22/04/2021 UTC
    Collection stop time: 02:58:20 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_9_missile.domn.0 > euler3d_cpu-log/vtune/9_missile.domn.0_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_9_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_9_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_missile.domn.0 -command stop.
Starting...
Compute time: 18.5313
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37650-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37650-quartz1822.sc' filvtune: Executing actions 12 % Loading '37664.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-37664-bd8a0c32.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 21 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 21.236s
    SP GFLOPS: 27.531
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.571
    Average CPU Frequency: 2.788 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 21.2% (7.646 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 10.7% (7.729 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 2.831s (13.3%)

        Top Serial Hotspots (outside parallel regions)
        Function                                                        Module               Serial CPU Time
        --------------------------------------------------------------  -------------------  ---------------
        [Outside any known module]                                      [Unknown]                     0.977s
        ____strtof_l_internal                                           libc-2.17.so                  0.150s
        [Loop@0x3d9a0 in ____strtof_l_internal]                         libc-2.17.so                  0.150s
        [Loop@0x4064b2 in compute_flux]                                 euler3d_cpu                   0.075s
        std::istreambuf_iterator<char, std::char_traits<char>>::_M_get  libstdc++.so.6.0.20           0.060s
        [Others]                                                        N/A                           1.233s
    Parallel Region Time: 18.404s (86.7%)
        Estimated Ideal Time: 18.152s (85.5%)
        OpenMP Potential Gain: 0.253s (1.2%)
Memory Bound: 34.7% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 7.7% of Clockticks
    DRAM Bound: 3.2% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 24.6% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 75.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.087
    FP Arith/Mem Wr Instr. Ratio: 2.710
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 77 MB 
    Collection start time: 02:58:38 22/04/2021 UTC
    Collection stop time: 02:58:59 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_9_missile.domn.0 > euler3d_cpu-log/vtune/9_missile.domn.0_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_9_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r euler3d_cpu-log/vtune/cfd_tr_4_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_missile.domn.0 -command stop.
Starting...
Compute time: 34.0852
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37776-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37776-quartz1822.sc' filvtune: Executing actions 12 % Loading '37776-37782.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-37782-4ee7cfe8.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6'       vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 37.770s
    Paused Time: 0s
Effective CPU Utilization: 5.0% (3.574 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 37.770
        Serial Time (outside parallel regions): 3.857s (10.2%)

            Top Serial Hotspots (outside parallel regions)
            Function                         Module          Serial CPU Time
            -------------------------------  --------------  ---------------
            std::ostream::flush              libstdc++.so.6           1.999s
            std::istream::_M_extract<float>  libstdc++.so.6           1.010s
            std::ostream::_M_insert<double>  libstdc++.so.6           0.330s
            __kmp_join_call                  libiomp5.so              0.190s
            std::istream::operator>>         libstdc++.so.6           0.100s
            [Others]                         N/A                      0.120s
        Parallel Region Time: 33.913s (89.8%)
            Estimated Ideal Time: 33.706s (89.2%)
            OpenMP Potential Gain: 0.207s (0.5%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 6.667s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                         Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        --------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                    6.653s                        100.0%           3
        Stream momentum 0x106ea845                                                       0.003s                        100.0%           1
        Stream density 0xd11e7140                                                        0.002s                        100.0%           1
        Stream ../../data/cfd/missile.domn.0.2M 0x06cf4c56                               0.002s                        100.0%           1
        Stream density_energy 0x78491cd7                                                 0.002s                        100.0%           1
        [Others]                                                                         0.004s                        100.0%          18
    Spin and Overhead Time: 5.473s (3.9% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function             Module       Spin and Overhead Time  (% from CPU Time)(%)
        -------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier   libiomp5.so                  3.580s                  2.5%
        __kmp_fork_call      libiomp5.so                  0.853s                  0.6%
        [OpenMP dispatcher]  libiomp5.so                  0.270s                  0.2%
        __kmp_join_call      libiomp5.so                  0.250s                  0.2%
        __kmp_join_barrier   libiomp5.so                  0.150s                  0.1%
        [Others]             N/A                          0.370s                  0.3%
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 21 MB 
    Collection start time: 02:59:23 22/04/2021 UTC
    Collection stop time: 03:00:02 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_tr_4_missile.domn.0 > euler3d_cpu-log/vtune/4_missile.domn.0_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_tr_4_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r euler3d_cpu-log/vtune/cfd_hpc_4_missile.domn.0 --  euler3d_cpu ../../data/cfd/missile.domn.0.2M 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_missile.domn.0 -command stop.
Starting...
Compute time: 37.506
Saving solution...
Saved solution...
Cleaning up...
Done...
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-37893-quartz1822.sc' filvtune: Executing actions 12 % Loading 'systemcollector-37893-quartz1822.sc' filvtune: Executing actions 12 % Loading '37908.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-37908-2eb5196a.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libdl-2.17.so'        vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `euler3d_cpu'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu'.
vtune: Executing actions 19 % Resolving information for `libstdc++.so.6.0.20'  vtune: Executing actions 19 % Resolving information for dangling locations     
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 21 % Resolving information for dangling locations     vtune: Executing actions 22 % Resolving information for dangling locations     vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 40.410s
    SP GFLOPS: 14.806
    DP GFLOPS: 0.000
    x87 GFLOPS: 0.000
    CPI Rate: 0.565
    Average CPU Frequency: 3.068 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.2% (3.668 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.1% (3.668 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 3.025s (7.5%)

        Top Serial Hotspots (outside parallel regions)
        Function                                                        Module               Serial CPU Time
        --------------------------------------------------------------  -------------------  ---------------
        [Outside any known module]                                      [Unknown]                     1.022s
        ____strtof_l_internal                                           libc-2.17.so                  0.195s
        [Loop@0x3d9a0 in ____strtof_l_internal]                         libc-2.17.so                  0.125s
        [Loop@0x4064b2 in compute_flux]                                 euler3d_cpu                   0.075s
        std::istreambuf_iterator<char, std::char_traits<char>>::_M_get  libstdc++.so.6.0.20           0.075s
        [Others]                                                        N/A                           1.333s
    Parallel Region Time: 37.385s (92.5%)
        Estimated Ideal Time: 37.182s (92.0%)
        OpenMP Potential Gain: 0.203s (0.5%)
Memory Bound: 35.8% of Pipeline Slots
 | The metric value is high. This can indicate that the significant fraction of
 | execution pipeline slots could be stalled due to demand memory load and
 | stores. Use Memory Access analysis to have the metric breakdown by memory
 | hierarchy, memory bandwidth information, correlation by memory objects.
 |
    Cache Bound: 7.0% of Clockticks
    DRAM Bound: 4.4% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 100.0% of Packed FP Operations
    Instruction Mix
        SP FLOPs: 25.4% of uOps
            Packed: 100.0% from SP FP
                128-bit: 100.0% from SP FP
                 | A significant fraction of floating point arithmetic vector
                 | instructions is executed with a partial vector load. Make
                 | sure you compile the code with the latest instruction set or
                 | use Intel Advisor for vectorization help.
                 |
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 0.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 0.0% from DP FP
        x87 FLOPs: 0.0% of uOps
        Non-FP: 74.6% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.133
    FP Arith/Mem Wr Instr. Ratio: 2.891
Collection and Platform Info
    Application Command Line: euler3d_cpu "../../data/cfd/missile.domn.0.2M" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz1822
    Result Size: 70 MB 
    Collection start time: 03:00:19 22/04/2021 UTC
    Collection stop time: 03:00:59 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r euler3d_cpu-log/vtune/cfd_hpc_4_missile.domn.0 > euler3d_cpu-log/vtune/4_missile.domn.0_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/cfd/euler3d_cpu-log/vtune/cfd_hpc_4_missile.domn.0'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
