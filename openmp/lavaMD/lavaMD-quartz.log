Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_10 --  lavaMD -cores 36 -boxes1d 10 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_10 -command stop.
Configuration used: cores = 36, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.091886997223 s, 20.451784133911 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.357398986816 s, 79.548217773438 % : CPU/MCPU: KERNEL
Total time:
0.449286013842 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70306-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70306-quartz3070.sc' filvtune: Executing actions 12 % Loading '70306-70311.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-70311-0f08d307.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 0.723s
    Paused Time: 0s
Effective CPU Utilization: 10.3% (7.389 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 0.723
        Serial Time (outside parallel regions): 0.519s (71.7%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function              Module       Serial CPU Time
            --------------------  -----------  ---------------
            ompc_set_num_threads  libiomp5.so           0.030s
            main                  lavaMD                0.010s
        Parallel Region Time: 0.204s (28.3%)
            Estimated Ideal Time: 0.138s (19.1%)
            OpenMP Potential Gain: 0.066s (9.1%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 2.440s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 2.440s                        100.0%          39
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           6
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 5.150s (52.0% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  4.680s                 47.2%
        __kmp_join_barrier    libiomp5.so                  0.320s                  3.2%
        __kmp_join_call       libiomp5.so                  0.120s                  1.2%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.3%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 3 MB 
    Collection start time: 23:39:53 21/04/2021 UTC
    Collection stop time: 23:39:55 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_10 > lavaMD-log/vtune/36_10_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_10 --  lavaMD -cores 36 -boxes1d 10 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_10 -command stop.
Configuration used: cores = 36, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.094598002732 s, 19.234624862671 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.397213011980 s, 80.765373229980 % : CPU/MCPU: KERNEL
Total time:
0.491811007261 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70427-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70427-quartz3070.sc' filvtune: Executing actions 12 % Loading '70442.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-70442-6fc7b3d9.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 21 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 0.536s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.046
    x87 GFLOPS: 0.000
    CPI Rate: 0.604
    Average CPU Frequency: 2.612 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 25.7% (9.259 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 14.8% (10.622 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.306s (57.0%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                    Module     Serial CPU Time
        --------------------------  ---------  ---------------
        [Outside any known module]  [Unknown]           0.170s
        [Loop@0x401849 in main]     lavaMD              0.005s
        [Loop@0x40197e in main]     lavaMD              0.005s
    Parallel Region Time: 0.231s (43.0%)
        Estimated Ideal Time: 0.143s (26.7%)
        OpenMP Potential Gain: 0.088s (16.3%)
         | The time wasted on load imbalance or parallel work arrangement is
         | significant and negatively impacts the application performance and
         | scalability. Explore OpenMP regions with the highest metric values.
         | Make sure the workload of the regions is enough and the loop schedule
         | is optimal.
         |
Memory Bound: 2.6% of Pipeline Slots
    Cache Bound: 1.2% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 14.6% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 85.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.448
     | The metric value is low. This can be a result of unaligned access to data
     | for vector operations. Use Intel Advisor to find possible data access
     | inefficiencies for vector operations.
     |
    FP Arith/Mem Wr Instr. Ratio: 1.138
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 6 MB 
    Collection start time: 23:40:13 21/04/2021 UTC
    Collection stop time: 23:40:13 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_10 > lavaMD-log/vtune/36_10_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_10 --  lavaMD -cores 18 -boxes1d 10 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_10 -command stop.
Configuration used: cores = 18, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.093114003539 s, 18.718526840210 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.404329001904 s, 81.281471252441 % : CPU/MCPU: KERNEL
Total time:
0.497442990541 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70557-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70557-quartz3070.sc' filvtune: Executing actions 12 % Loading '70557-70563.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-70563-f4f17590.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 0.742s
    Paused Time: 0s
Effective CPU Utilization: 9.7% (6.968 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 0.742
        Serial Time (outside parallel regions): 0.403s (54.3%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function              Module           Serial CPU Time
            --------------------  ---------------  ---------------
            ompc_set_num_threads  libiomp5.so               0.030s
            __pthread_create_2_1  libpthread.so.0           0.010s
            main                  lavaMD                    0.010s
        Parallel Region Time: 0.339s (45.7%)
            Estimated Ideal Time: 0.274s (37.0%)
            OpenMP Potential Gain: 0.064s (8.6%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 0.620s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 0.619s                        100.0%          15
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           3
        Stream /proc/meminfo 0x38509ecd                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 2.470s (34.3% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function              Module           Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  ---------------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                      2.160s                 30.0%
        __kmp_join_call       libiomp5.so                      0.160s                  2.2%
        __kmp_join_barrier    libiomp5.so                      0.110s                  1.5%
        ompc_set_num_threads  libiomp5.so                      0.030s                  0.4%
        __pthread_create_2_1  libpthread.so.0                  0.010s                  0.1%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 3 MB 
    Collection start time: 23:40:36 21/04/2021 UTC
    Collection stop time: 23:40:37 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_10 > lavaMD-log/vtune/18_10_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_10 --  lavaMD -cores 18 -boxes1d 10 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_10 -command stop.
Configuration used: cores = 18, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000001000000 s,  0.000222183706 % : CPU/MCPU: VARIABLES
 0.071985997260 s, 15.994116783142 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.378091007471 s, 84.005661010742 % : CPU/MCPU: KERNEL
Total time:
0.450078010559 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70653-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70653-quartz3070.sc' filvtune: Executing actions 12 % Loading '70668.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-70668-120afe3e.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libittnotify_collectorvtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 0.494s
    SP GFLOPS: 0.000
    DP GFLOPS: 11.480
    x87 GFLOPS: 0.000
    CPI Rate: 0.481
    Average CPU Frequency: 2.660 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 25.2% (9.055 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 12.7% (9.112 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.197s (39.8%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                    Module                     Serial CPU Time
        --------------------------  -------------------------  ---------------
        [Outside any known module]  [Unknown]                           0.095s
        func@0x7efe0                libittnotify_collector.so           0.010s
    Parallel Region Time: 0.297s (60.2%)
        Estimated Ideal Time: 0.243s (49.1%)
        OpenMP Potential Gain: 0.055s (11.1%)
         | The time wasted on load imbalance or parallel work arrangement is
         | significant and negatively impacts the application performance and
         | scalability. Explore OpenMP regions with the highest metric values.
         | Make sure the workload of the regions is enough and the loop schedule
         | is optimal.
         |
Memory Bound: 5.5% of Pipeline Slots
    Cache Bound: 1.3% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 25.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 74.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.814
    FP Arith/Mem Wr Instr. Ratio: 2.029
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 5 MB 
    Collection start time: 23:40:54 21/04/2021 UTC
    Collection stop time: 23:40:55 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_10 > lavaMD-log/vtune/18_10_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_10 --  lavaMD -cores 9 -boxes1d 10 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_10 -command stop.
Configuration used: cores = 9, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.092569001019 s, 13.456771850586 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.595329999924 s, 86.543228149414 % : CPU/MCPU: KERNEL
Total time:
0.687898993492 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70765-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70765-quartz3070.sc' filvtune: Executing actions 12 % Loading '70765-70770.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-70770-6e661778.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libc-dynamic.so'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/pinruntime/libc-dynamic.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `pinbin'               vtune: Executing actions 20 % Resolving information for `pinbin'               vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 21 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/bin64/pinbin'.
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 0.766s
    Paused Time: 0s
Effective CPU Utilization: 7.4% (5.327 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 0.766
        Serial Time (outside parallel regions): 0.205s (26.7%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                              Module           Serial CPU Time
            ------------------------------------  ---------------  ---------------
            ompc_set_num_threads                  libiomp5.so               0.030s
            OS_BARESYSCALL_DoCallAsmIntel64Linux  libc-dynamic.so           0.010s
            __kmp_fork_call                       libiomp5.so               0.010s
        Parallel Region Time: 0.561s (73.3%)
            Estimated Ideal Time: 0.454s (59.2%)
            OpenMP Potential Gain: 0.108s (14.0%)
             | The time wasted on load imbalance or parallel work arrangement is
             | significant and negatively impacts the application performance
             | and scalability. Explore OpenMP regions with the highest metric
             | values. Make sure the workload of the regions is enough and the
             | loop schedule is optimal.
             |
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 0.132s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 0.117s                        100.0%           6
        Condition Variable 0x8c09b9c8                                 0.014s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 1.130s (21.9% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.720s                 13.9%
        __kmp_join_call       libiomp5.so                  0.250s                  4.8%
        __kmp_join_barrier    libiomp5.so                  0.120s                  2.3%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.6%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.2%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 3 MB 
    Collection start time: 23:41:17 21/04/2021 UTC
    Collection stop time: 23:41:18 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_10 > lavaMD-log/vtune/9_10_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_10 --  lavaMD -cores 9 -boxes1d 10 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_10 -command stop.
Configuration used: cores = 9, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.088489003479 s, 14.683510780334 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.514153003693 s, 85.316490173340 % : CPU/MCPU: KERNEL
Total time:
0.602641999722 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70850-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70850-quartz3070.sc' filvtune: Executing actions 12 % Loading '70865.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-70865-59322fc3.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 0.646s
    SP GFLOPS: 0.000
    DP GFLOPS: 9.894
    x87 GFLOPS: 0.000
    CPI Rate: 0.437
    Average CPU Frequency: 2.918 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 16.8% (6.041 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 8.3% (5.952 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.178s (27.5%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                    Module                     Serial CPU Time
        --------------------------  -------------------------  ---------------
        [Outside any known module]  [Unknown]                           0.050s
        random                      libc-2.17.so                        0.010s
        func@0x7f060                libittnotify_collector.so           0.005s
        func@0x7efe0                libittnotify_collector.so           0.005s
    Parallel Region Time: 0.468s (72.5%)
        Estimated Ideal Time: 0.425s (65.7%)
        OpenMP Potential Gain: 0.044s (6.8%)
Memory Bound: 5.5% of Pipeline Slots
    Cache Bound: 2.2% of Clockticks
    DRAM Bound: 1.5% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 30.5% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 69.5% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.981
    FP Arith/Mem Wr Instr. Ratio: 2.343
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 5 MB 
    Collection start time: 23:41:34 21/04/2021 UTC
    Collection stop time: 23:41:35 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_10 > lavaMD-log/vtune/9_10_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_10 --  lavaMD -cores 4 -boxes1d 10 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_10 -command stop.
Configuration used: cores = 4, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.305148988962 s, 23.936990737915 % : MCPU: SET DEVICE
 0.000001000000 s,  0.000078443620 % : CPU/MCPU: INPUTS
 0.969650983810 s, 76.062927246094 % : CPU/MCPU: KERNEL
Total time:
1.274801015854 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-70953-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-70953-quartz3070.sc' filvtune: Executing actions 12 % Loading '70953-70958.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-70958-c4f63475.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 1.472s
    Paused Time: 0s
Effective CPU Utilization: 3.3% (2.377 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 1.472
        Serial Time (outside parallel regions): 0.508s (34.5%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            ompc_set_num_threads        libiomp5.so           0.030s
            [Outside any known module]  [Unknown]             0.010s
            main                        lavaMD                0.010s
        Parallel Region Time: 0.964s (65.5%)
            Estimated Ideal Time: 0.885s (60.1%)
            OpenMP Potential Gain: 0.079s (5.4%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 0.011s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                                    Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                               0.011s                        100.0%           1
        Stream 0x14cedaf4                                                                           0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                                                             0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                                                             0.000s                        100.0%           1
        Stream /sys/kernel/mm/transparent_hugepage/enabled 0xb68f2e09                               0.000s                        100.0%           1
        [Others]                                                                                    0.000s                        100.0%           2
    Spin and Overhead Time: 0.570s (14.4% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.360s                  9.1%
        __kmp_join_call       libiomp5.so                  0.170s                  4.3%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.8%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.3%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 3 MB 
    Collection start time: 23:41:57 21/04/2021 UTC
    Collection stop time: 23:41:59 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_10 > lavaMD-log/vtune/4_10_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_10 --  lavaMD -cores 4 -boxes1d 10 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_10 -command stop.
Configuration used: cores = 4, boxes1d = 10
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.083916999400 s,  8.130105972290 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 0.948258996010 s, 91.869895935059 % : CPU/MCPU: KERNEL
Total time:
1.032176017761 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71035-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71035-quartz3070.sc' filvtune: Executing actions 12 % Loading '71049.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-71049-cd8c7be8.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `libittnotify_collectorvtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 1.070s
    SP GFLOPS: 0.000
    DP GFLOPS: 6.223
    x87 GFLOPS: 0.000
    CPI Rate: 0.433
    Average CPU Frequency: 3.255 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 9.1% (3.258 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 4.5% (3.231 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.140s (13.0%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module                     Serial CPU Time
        --------------------------  -------------------------  ---------------
        [Outside any known module]  [Unknown]                           0.025s
        func@0x7efe0                libittnotify_collector.so           0.010s
        [Loop@0x401849 in main]     lavaMD                              0.005s
        random                      libc-2.17.so                        0.005s
    Parallel Region Time: 0.931s (87.0%)
        Estimated Ideal Time: 0.853s (79.7%)
        OpenMP Potential Gain: 0.077s (7.2%)
Memory Bound: 6.8% of Pipeline Slots
    Cache Bound: 3.8% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 31.2% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 68.8% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.019
    FP Arith/Mem Wr Instr. Ratio: 2.434
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "10" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 5 MB 
    Collection start time: 23:42:15 21/04/2021 UTC
    Collection stop time: 23:42:16 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_10 > lavaMD-log/vtune/4_10_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_10'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_20 --  lavaMD -cores 36 -boxes1d 20 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_20 -command stop.
Configuration used: cores = 36, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.105455003679 s,  6.675047397614 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 1.474383950233 s, 93.324951171875 % : CPU/MCPU: KERNEL
Total time:
1.579838991165 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71133-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71133-quartz3070.sc' filvtune: Executing actions 12 % Loading '71133-71138.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-71138-6c0ac786.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 2.161s
    Paused Time: 0s
Effective CPU Utilization: 27.9% (20.063 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 2.161
        Serial Time (outside parallel regions): 0.833s (38.5%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function              Module       Serial CPU Time
            --------------------  -----------  ---------------
            main                  lavaMD                0.050s
            ompc_set_num_threads  libiomp5.so           0.030s
            rand                  libc.so.6             0.020s
            __kmp_fork_call       libiomp5.so           0.010s
        Parallel Region Time: 1.328s (61.5%)
            Estimated Ideal Time: 1.104s (51.1%)
            OpenMP Potential Gain: 0.224s (10.4%)
             | The time wasted on load imbalance or parallel work arrangement is
             | significant and negatively impacts the application performance
             | and scalability. Explore OpenMP regions with the highest metric
             | values. Make sure the workload of the regions is enough and the
             | loop schedule is optimal.
             |
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 7.896s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 7.748s                        100.0%          62
        Condition Variable 0x8c09b9c8                                 0.147s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           4
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 7.680s (16.2% of CPU Time)
     | The threading runtime function related to time spent on imbalance or
     | serial spinning consumed a significant amount of CPU time. This can be
     | caused by a load imbalance, insufficient concurrency for all working
     | threads, or busy waits of worker threads while serial code is executed.
     | If there is an imbalance, apply dynamic work scheduling or reduce the
     | size of work chunks or tasks. If there is insufficient concurrency,
     | consider collapsing the outer and inner loops. If there is a wait for
     | completion of serial code, explore options for parallelization with Intel
     | Advisor, algorithm, or microarchitecture tuning of the application's
     | serial code with VTune Profiler Basic Hotspots or Microarchitecture
     | Exploration analysis respectively. For OpenMP* applications, use the Per-
     | Barrier OpenMP Potential Gain metric set in the HPC Performance
     | Characterization analysis to discover the reason for high imbalance or
     | serial spin time.
     |

        Top Functions with Spin or Overhead Time
        Function                      Module       Spin and Overhead Time  (% from CPU Time)(%)
        ----------------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier            libiomp5.so                  6.630s                 14.0%
        __kmp_join_barrier            libiomp5.so                  0.540s                  1.1%
        __kmp_join_call               libiomp5.so                  0.460s                  1.0%
        ompc_set_num_threads          libiomp5.so                  0.030s                  0.1%
        __kmp_fork_call               libiomp5.so                  0.010s                  0.0%
        __kmp_affinity_set_init_mask  libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 4 MB 
    Collection start time: 23:42:38 21/04/2021 UTC
    Collection stop time: 23:42:41 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_20 > lavaMD-log/vtune/36_20_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_20 --  lavaMD -cores 36 -boxes1d 20 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_20 -command stop.
Configuration used: cores = 36, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.070629000664 s,  4.518084526062 % : MCPU: SET DEVICE
 0.000001000000 s,  0.000063969252 % : CPU/MCPU: INPUTS
 1.492620944977 s, 95.481849670410 % : CPU/MCPU: KERNEL
Total time:
1.563251018524 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71248-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71248-quartz3070.sc' filvtune: Executing actions 12 % Loading '71263.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-71263-40e0ee32.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libittnotify_collectorvtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 1.762s
    SP GFLOPS: 0.000
    DP GFLOPS: 31.729
    x87 GFLOPS: 0.000
    CPI Rate: 0.466
    Average CPU Frequency: 2.601 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 61.3% (22.067 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 32.0% (23.005 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.456s (25.9%)
     | Serial Time of your application is high. It directly impacts application
     | Elapsed Time and scalability. Explore options for parallelization,
     | algorithm or microarchitecture tuning of the serial part of the
     | application.
     |

        Top Serial Hotspots (outside parallel regions)
        Function                    Module                     Serial CPU Time
        --------------------------  -------------------------  ---------------
        [Outside any known module]  [Unknown]                           0.246s
        [Loop@0x401849 in main]     lavaMD                              0.015s
        func@0x7efe0                libittnotify_collector.so           0.005s
        write                       libpthread-2.17.so                  0.005s
        [Loop@0x40197e in main]     lavaMD                              0.005s
        [Others]                    N/A                                 0.010s
    Parallel Region Time: 1.305s (74.1%)
        Estimated Ideal Time: 1.108s (62.9%)
        OpenMP Potential Gain: 0.197s (11.2%)
         | The time wasted on load imbalance or parallel work arrangement is
         | significant and negatively impacts the application performance and
         | scalability. Explore OpenMP regions with the highest metric values.
         | Make sure the workload of the regions is enough and the loop schedule
         | is optimal.
         |
Memory Bound: 5.7% of Pipeline Slots
    Cache Bound: 3.4% of Clockticks
    DRAM Bound: 0.2% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 28.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 71.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.935
    FP Arith/Mem Wr Instr. Ratio: 2.289
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 19 MB 
    Collection start time: 23:42:59 21/04/2021 UTC
    Collection stop time: 23:43:01 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_20 > lavaMD-log/vtune/36_20_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_20 --  lavaMD -cores 18 -boxes1d 20 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_20 -command stop.
Configuration used: cores = 18, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.089107997715 s,  3.700034379959 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 2.319194078445 s, 96.299964904785 % : CPU/MCPU: KERNEL
Total time:
2.408302068710 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71381-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71381-quartz3070.sc' filvtune: Executing actions 12 % Loading '71381-71388.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-71388-555824ad.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' 
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 2.600s
    Paused Time: 0s
Effective CPU Utilization: 20.3% (14.650 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 2.600
        Serial Time (outside parallel regions): 0.370s (14.2%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.050s
            ompc_set_num_threads        libiomp5.so           0.030s
            rand                        libc.so.6             0.020s
            [Outside any known module]  [Unknown]             0.010s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 2.230s (85.8%)
            Estimated Ideal Time: 2.107s (81.0%)
            OpenMP Potential Gain: 0.123s (4.7%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 1.636s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 1.085s                        100.0%          15
        Condition Variable 0x8c09b9c8                                 0.548s                        100.0%           1
        Mutex 0x6cb3026d                                              0.003s                        100.0%           5
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 2.110s (5.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module                Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  --------------------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                           1.740s                  4.3%
        __kmp_join_call       libiomp5.so                           0.210s                  0.5%
        __kmp_join_barrier    libiomp5.so                           0.110s                  0.3%
        ompc_set_num_threads  libiomp5.so                           0.030s                  0.1%
        __tls_get_addr        ld-linux-x86-64.so.2                  0.010s                  0.0%
        __kmp_fork_call       libiomp5.so                           0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 4 MB 
    Collection start time: 23:43:25 21/04/2021 UTC
    Collection stop time: 23:43:28 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_20 > lavaMD-log/vtune/18_20_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_20 --  lavaMD -cores 18 -boxes1d 20 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_20 -command stop.
Configuration used: cores = 18, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.092684000731 s,  3.900707244873 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 2.283397912979 s, 96.099296569824 % : CPU/MCPU: KERNEL
Total time:
2.376081943512 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71480-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71480-quartz3070.sc' filvtune: Executing actions 12 % Loading '71494.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-71494-0a2320e3.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 2.492s
    SP GFLOPS: 0.000
    DP GFLOPS: 24.050
    x87 GFLOPS: 0.000
    CPI Rate: 0.425
    Average CPU Frequency: 2.679 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 41.2% (14.836 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 20.5% (14.729 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.304s (12.2%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.150s
        random_r                    libc-2.17.so           0.020s
        [Loop@0x4019f7 in main]     lavaMD                 0.005s
        random                      libc-2.17.so           0.005s
        rand                        libc-2.17.so           0.005s
        [Others]                    N/A                    0.005s
    Parallel Region Time: 2.188s (87.8%)
        Estimated Ideal Time: 2.031s (81.5%)
        OpenMP Potential Gain: 0.157s (6.3%)
Memory Bound: 8.5% of Pipeline Slots
    Cache Bound: 5.0% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 32.3% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 67.7% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.054
    FP Arith/Mem Wr Instr. Ratio: 2.510
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 17 MB 
    Collection start time: 23:43:46 21/04/2021 UTC
    Collection stop time: 23:43:48 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_20 > lavaMD-log/vtune/18_20_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_20 --  lavaMD -cores 9 -boxes1d 20 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_20 -command stop.
Configuration used: cores = 9, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.099646002054 s,  2.467568635941 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 3.938580036163 s, 97.532432556152 % : CPU/MCPU: KERNEL
Total time:
4.038226127625 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71595-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71595-quartz3070.sc' filvtune: Executing actions 12 % Loading '71595-71600.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-71600-64545457.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libpthread.so.0'      vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 4.208s
    Paused Time: 0s
Effective CPU Utilization: 11.1% (8.018 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 4.208
        Serial Time (outside parallel regions): 0.298s (7.1%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.060s
            ompc_set_num_threads        libiomp5.so           0.030s
            rand                        libc.so.6             0.010s
            [Outside any known module]  [Unknown]             0.010s
        Parallel Region Time: 3.910s (92.9%)
            Estimated Ideal Time: 3.731s (88.7%)
            OpenMP Potential Gain: 0.179s (4.2%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 0.992s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 0.527s                        100.0%           6
        Condition Variable 0x8c09b9c8                                 0.464s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 1.030s (3.0% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.630s                  1.8%
        __kmp_join_call       libiomp5.so                  0.220s                  0.6%
        __kmp_join_barrier    libiomp5.so                  0.150s                  0.4%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.1%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 4 MB 
    Collection start time: 23:44:13 21/04/2021 UTC
    Collection stop time: 23:44:17 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_20 > lavaMD-log/vtune/9_20_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_20 --  lavaMD -cores 9 -boxes1d 20 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_20 -command stop.
Configuration used: cores = 9, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.076482996345 s,  1.832331538200 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 4.097598075867 s, 98.167671203613 % : CPU/MCPU: KERNEL
Total time:
4.174080848694 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71686-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71686-quartz3070.sc' filvtune: Executing actions 12 % Loading '71701.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-71701-988dda10.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 4.301s
    SP GFLOPS: 0.000
    DP GFLOPS: 14.020
    x87 GFLOPS: 0.000
    CPI Rate: 0.427
    Average CPU Frequency: 2.909 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 21.8% (7.851 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.0% (7.912 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.245s (5.7%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module                     Serial CPU Time
        --------------------------  -------------------------  ---------------
        [Outside any known module]  [Unknown]                           0.105s
        random_r                    libc-2.17.so                        0.020s
        func@0x7efe0                libittnotify_collector.so           0.005s
        [Loop@0x4016e5 in main]     lavaMD                              0.005s
        random                      libc-2.17.so                        0.005s
        [Others]                    N/A                                 0.005s
    Parallel Region Time: 4.056s (94.3%)
        Estimated Ideal Time: 3.785s (88.0%)
        OpenMP Potential Gain: 0.271s (6.3%)
Memory Bound: 8.5% of Pipeline Slots
    Cache Bound: 5.2% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 32.7% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 67.3% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.064
    FP Arith/Mem Wr Instr. Ratio: 2.545
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 16 MB 
    Collection start time: 23:44:35 21/04/2021 UTC
    Collection stop time: 23:44:40 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_20 > lavaMD-log/vtune/9_20_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_20 --  lavaMD -cores 4 -boxes1d 20 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_20 -command stop.
Configuration used: cores = 4, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.096828997135 s,  1.186704158783 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 8.062660217285 s, 98.813293457031 % : CPU/MCPU: KERNEL
Total time:
8.159488677979 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71793-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71793-quartz3070.sc' filvtune: Executing actions 12 % Loading '71793-71798.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-71798-becfd4ac.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 8.407s
    Paused Time: 0s
Effective CPU Utilization: 5.0% (3.616 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 8.407
        Serial Time (outside parallel regions): 0.351s (4.2%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.050s
            ompc_set_num_threads        libiomp5.so           0.030s
            rand                        libc.so.6             0.020s
            [Outside any known module]  [Unknown]             0.010s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 8.057s (95.8%)
            Estimated Ideal Time: 7.565s (90.0%)
            OpenMP Potential Gain: 0.491s (5.8%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 1.555s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x8c09b9c8                                 0.780s                        100.0%           1
        Condition Variable 0x74c978ed                                 0.775s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.680s (2.2% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.440s                  1.4%
        __kmp_join_call       libiomp5.so                  0.200s                  0.6%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.1%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 4 MB 
    Collection start time: 23:45:02 21/04/2021 UTC
    Collection stop time: 23:45:10 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_20 > lavaMD-log/vtune/4_20_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_20 --  lavaMD -cores 4 -boxes1d 20 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_20 -command stop.
Configuration used: cores = 4, boxes1d = 20
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.140901997685 s,  1.709007978439 % : MCPU: SET DEVICE
 0.000001000000 s,  0.000012129054 % : CPU/MCPU: INPUTS
 8.103762626648 s, 98.290977478027 % : CPU/MCPU: KERNEL
Total time:
8.244666099548 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71880-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71880-quartz3070.sc' filvtune: Executing actions 12 % Loading '71895.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-71895-b08f30dd.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 8.516s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.197
    x87 GFLOPS: 0.000
    CPI Rate: 0.418
    Average CPU Frequency: 3.218 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 9.9% (3.567 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 4.9% (3.560 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.432s (5.1%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module                     Serial CPU Time
        --------------------------  -------------------------  ---------------
        [Outside any known module]  [Unknown]                           0.070s
        [Loop@0x401849 in main]     lavaMD                              0.020s
        random                      libc-2.17.so                        0.010s
        random_r                    libc-2.17.so                        0.010s
        func@0x7efe0                libittnotify_collector.so           0.005s
        [Others]                    N/A                                 0.015s
    Parallel Region Time: 8.084s (94.9%)
        Estimated Ideal Time: 7.681s (90.2%)
        OpenMP Potential Gain: 0.403s (4.7%)
Memory Bound: 9.0% of Pipeline Slots
    Cache Bound: 5.3% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.5% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.5% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.096
    FP Arith/Mem Wr Instr. Ratio: 2.607
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "20" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 15 MB 
    Collection start time: 23:45:27 21/04/2021 UTC
    Collection stop time: 23:45:36 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_20 > lavaMD-log/vtune/4_20_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_20'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_30 --  lavaMD -cores 36 -boxes1d 30 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_30 -command stop.
Configuration used: cores = 36, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.131684005260 s,  3.033972024918 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 4.208632946014 s, 96.966026306152 % : CPU/MCPU: KERNEL
Total time:
4.340316772461 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-71990-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-71990-quartz3070.sc' filvtune: Executing actions 12 % Loading '71990-71995.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-71995-eb85e832.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 4.937s
    Paused Time: 0s
Effective CPU Utilization: 38.5% (27.744 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 4.937
        Serial Time (outside parallel regions): 0.938s (19.0%)
         | Serial Time of your application is high. It directly impacts
         | application Elapsed Time and scalability. Explore options for
         | parallelization, algorithm or microarchitecture tuning of the serial
         | part of the application.
         |

            Top Serial Hotspots (outside parallel regions)
            Function                    Module           Serial CPU Time
            --------------------------  ---------------  ---------------
            main                        lavaMD                    0.130s
            rand                        libc.so.6                 0.090s
            ompc_set_num_threads        libiomp5.so               0.040s
            [Outside any known module]  [Unknown]                 0.020s
            __pthread_create_2_1        libpthread.so.0           0.010s
            func@0x401390               lavaMD                    0.010s
        Parallel Region Time: 3.999s (81.0%)
            Estimated Ideal Time: 3.709s (75.1%)
            OpenMP Potential Gain: 0.290s (5.9%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 9.736s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 8.940s                        100.0%          63
        Condition Variable 0x8c09b9c8                                 0.796s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 8.120s (5.7% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module           Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  ---------------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                      6.660s                  4.7%
        __kmp_join_barrier    libiomp5.so                      0.760s                  0.5%
        __kmp_join_call       libiomp5.so                      0.640s                  0.5%
        ompc_set_num_threads  libiomp5.so                      0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                      0.010s                  0.0%
        __pthread_create_2_1  libpthread.so.0                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 6 MB 
    Collection start time: 23:45:58 21/04/2021 UTC
    Collection stop time: 23:46:03 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_30 > lavaMD-log/vtune/36_30_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_30 --  lavaMD -cores 36 -boxes1d 30 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_30 -command stop.
Configuration used: cores = 36, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.136589005589 s,  2.784100532532 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 4.769447803497 s, 97.215896606445 % : CPU/MCPU: KERNEL
Total time:
4.906036853790 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72110-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72110-quartz3070.sc' filvtune: Executing actions 12 % Loading '72125.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-72125-a18256c5.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 5.303s
    SP GFLOPS: 0.000
    DP GFLOPS: 37.169
    x87 GFLOPS: 0.000
    CPI Rate: 0.476
    Average CPU Frequency: 2.599 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 69.7% (25.093 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 38.9% (28.003 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.703s (13.3%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.356s
        random                      libc-2.17.so           0.045s
        [Loop@0x401849 in main]     lavaMD                 0.030s
        random_r                    libc-2.17.so           0.030s
        rand                        libc-2.17.so           0.015s
        [Others]                    N/A                    0.020s
    Parallel Region Time: 4.600s (86.7%)
        Estimated Ideal Time: 4.172s (78.7%)
        OpenMP Potential Gain: 0.428s (8.1%)
Memory Bound: 7.2% of Pipeline Slots
    Cache Bound: 4.9% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 30.6% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 69.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 0.997
    FP Arith/Mem Wr Instr. Ratio: 2.409
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 55 MB 
    Collection start time: 23:46:23 21/04/2021 UTC
    Collection stop time: 23:46:28 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_30 > lavaMD-log/vtune/36_30_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_30 --  lavaMD -cores 18 -boxes1d 30 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_30 -command stop.
Configuration used: cores = 18, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.096854999661 s,  1.226408958435 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 7.800591945648 s, 98.773590087891 % : CPU/MCPU: KERNEL
Total time:
7.897447109222 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72250-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72250-quartz3070.sc' filvtune: Executing actions 12 % Loading '72250-72255.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-72255-670103c8.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-dynamic.so'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libdl.so.2'           
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/pinruntime/libc-dynamic.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libpin3dwarf.so'      vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 8.364s
    Paused Time: 0s
Effective CPU Utilization: 22.1% (15.922 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 8.364
        Serial Time (outside parallel regions): 0.624s (7.5%)

            Top Serial Hotspots (outside parallel regions)
            Function                              Module           Serial CPU Time
            ------------------------------------  ---------------  ---------------
            main                                  lavaMD                    0.130s
            rand                                  libc.so.6                 0.100s
            ompc_set_num_threads                  libiomp5.so               0.030s
            [Outside any known module]            [Unknown]                 0.020s
            OS_BARESYSCALL_DoCallAsmIntel64Linux  libc-dynamic.so           0.010s
        Parallel Region Time: 7.741s (92.5%)
            Estimated Ideal Time: 7.350s (87.9%)
            OpenMP Potential Gain: 0.391s (4.7%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 5.272s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 4.041s                        100.0%          27
        Condition Variable 0x8c09b9c8                                 1.230s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           3
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 3.930s (2.9% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.320s                  2.4%
        __kmp_join_call       libiomp5.so                  0.530s                  0.4%
        __kmp_join_barrier    libiomp5.so                  0.050s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 6 MB 
    Collection start time: 23:46:56 21/04/2021 UTC
    Collection stop time: 23:47:05 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_30 > lavaMD-log/vtune/18_30_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_30 --  lavaMD -cores 18 -boxes1d 30 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_30 -command stop.
Configuration used: cores = 18, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.184878006577 s,  2.305276155472 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 7.834898948669 s, 97.694725036621 % : CPU/MCPU: KERNEL
Total time:
8.019777297974 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72351-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72351-quartz3070.sc' filvtune: Executing actions 12 % Loading '72366.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-72366-6bbcefdc.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 21 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 8.377s
    SP GFLOPS: 0.000
    DP GFLOPS: 25.215
    x87 GFLOPS: 0.000
    CPI Rate: 0.425
    Average CPU Frequency: 2.606 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 43.8% (15.764 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 22.0% (15.849 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.630s (7.5%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.291s
        random                      libc-2.17.so           0.025s
        [Loop@0x401849 in main]     lavaMD                 0.015s
        rand                        libc-2.17.so           0.015s
        random_r                    libc-2.17.so           0.015s
        [Others]                    N/A                    0.020s
    Parallel Region Time: 7.747s (92.5%)
        Estimated Ideal Time: 7.378s (88.1%)
        OpenMP Potential Gain: 0.369s (4.4%)
Memory Bound: 9.2% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 67.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.079
    FP Arith/Mem Wr Instr. Ratio: 2.570
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 48 MB 
    Collection start time: 23:47:22 21/04/2021 UTC
    Collection stop time: 23:47:30 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_30 > lavaMD-log/vtune/18_30_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_30 --  lavaMD -cores 9 -boxes1d 30 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_30 -command stop.
Configuration used: cores = 9, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.095517002046 s,  0.690457820892 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
13.738347053528 s, 99.309539794922 % : CPU/MCPU: KERNEL
Total time:
13.833864212036 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72472-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72472-quartz3070.sc' filvtune: Executing actions 12 % Loading '72472-72477.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-72477-19bdbec0.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 14.188s
    Paused Time: 0s
Effective CPU Utilization: 11.7% (8.419 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 14.188
        Serial Time (outside parallel regions): 0.480s (3.4%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.140s
            rand                        libc.so.6             0.090s
            ompc_set_num_threads        libiomp5.so           0.040s
            [Outside any known module]  [Unknown]             0.020s
        Parallel Region Time: 13.708s (96.6%)
            Estimated Ideal Time: 13.233s (93.3%)
            OpenMP Potential Gain: 0.475s (3.3%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 3.109s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 1.815s                        100.0%           9
        Condition Variable 0x8c09b9c8                                 1.294s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 1.650s (1.4% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.230s                  1.0%
        __kmp_join_call       libiomp5.so                  0.300s                  0.2%
        __kmp_join_barrier    libiomp5.so                  0.080s                  0.1%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 5 MB 
    Collection start time: 23:47:55 21/04/2021 UTC
    Collection stop time: 23:48:09 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_30 > lavaMD-log/vtune/9_30_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_30 --  lavaMD -cores 9 -boxes1d 30 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_30 -command stop.
Configuration used: cores = 9, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.108650997281 s,  0.767630457878 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
14.045426368713 s, 99.232368469238 % : CPU/MCPU: KERNEL
Total time:
14.154076576233 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72570-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72570-quartz3070.sc' filvtune: Executing actions 12 % Loading '72584.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-72584-7d4a1a9b.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 14.517s
    SP GFLOPS: 0.000
    DP GFLOPS: 14.675
    x87 GFLOPS: 0.000
    CPI Rate: 0.421
    Average CPU Frequency: 2.864 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 22.8% (8.207 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.5% (8.269 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.527s (3.6%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.215s
        random_r                    libc-2.17.so           0.040s
        [Loop@0x401849 in main]     lavaMD                 0.035s
        random                      libc-2.17.so           0.035s
        [Loop@0x4016eb in main]     lavaMD                 0.010s
        [Others]                    N/A                    0.040s
    Parallel Region Time: 13.990s (96.4%)
        Estimated Ideal Time: 13.427s (92.5%)
        OpenMP Potential Gain: 0.563s (3.9%)
Memory Bound: 9.1% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.6% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.099
    FP Arith/Mem Wr Instr. Ratio: 2.614
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 46 MB 
    Collection start time: 23:48:27 21/04/2021 UTC
    Collection stop time: 23:48:41 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_30 > lavaMD-log/vtune/9_30_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_30 --  lavaMD -cores 4 -boxes1d 30 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_30 -command stop.
Configuration used: cores = 4, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.101782001555 s,  0.356326937675 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
28.462436676025 s, 99.643669128418 % : CPU/MCPU: KERNEL
Total time:
28.564218521118 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72688-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72688-quartz3070.sc' filvtune: Executing actions 12 % Loading '72688-72693.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-72693-85c7e744.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 28.876s
    Paused Time: 0s
Effective CPU Utilization: 5.2% (3.769 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 28.876
        Serial Time (outside parallel regions): 0.418s (1.4%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.170s
            rand                        libc.so.6             0.060s
            [Outside any known module]  [Unknown]             0.030s
            ompc_set_num_threads        libiomp5.so           0.030s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 28.457s (98.6%)
            Estimated Ideal Time: 27.149s (94.0%)
            OpenMP Potential Gain: 1.308s (4.5%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 4.733s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x8c09b9c8                                 2.515s                        100.0%           1
        Condition Variable 0x74c978ed                                 2.217s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.680s (0.6% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.440s                  0.4%
        __kmp_join_call       libiomp5.so                  0.200s                  0.2%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 5 MB 
    Collection start time: 23:49:05 21/04/2021 UTC
    Collection stop time: 23:49:34 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_30 > lavaMD-log/vtune/4_30_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_30 --  lavaMD -cores 4 -boxes1d 30 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_30 -command stop.
Configuration used: cores = 4, boxes1d = 30
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.077141001821 s,  0.250954240561 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
30.661931991577 s, 99.749046325684 % : CPU/MCPU: KERNEL
Total time:
30.739072799683 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72793-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72793-quartz3070.sc' filvtune: Executing actions 12 % Loading '72807.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-72807-34edccd8.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `libc-2.17.so'         vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libittnotify_collectorvtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 31.038s
    SP GFLOPS: 0.000
    DP GFLOPS: 6.898
    x87 GFLOPS: 0.000
    CPI Rate: 0.417
    Average CPU Frequency: 3.003 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.2% (3.657 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.1% (3.664 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.403s (1.3%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.145s
        random                      libc-2.17.so           0.050s
        random_r                    libc-2.17.so           0.045s
        [Loop@0x401849 in main]     lavaMD                 0.030s
        [Loop@0x4016eb in main]     lavaMD                 0.015s
        [Others]                    N/A                    0.015s
    Parallel Region Time: 30.635s (98.7%)
        Estimated Ideal Time: 29.013s (93.5%)
        OpenMP Potential Gain: 1.622s (5.2%)
Memory Bound: 9.5% of Pipeline Slots
    Cache Bound: 5.7% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.111
    FP Arith/Mem Wr Instr. Ratio: 2.624
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "30" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 44 MB 
    Collection start time: 23:49:51 21/04/2021 UTC
    Collection stop time: 23:50:22 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_30 > lavaMD-log/vtune/4_30_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_30'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_40 --  lavaMD -cores 36 -boxes1d 40 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_40 -command stop.
Configuration used: cores = 36, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.103252001107 s,  1.108066916466 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 9.214958190918 s, 98.891929626465 % : CPU/MCPU: KERNEL
Total time:
9.318209648132 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-72936-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-72936-quartz3070.sc' filvtune: Executing actions 12 % Loading '72936-72941.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-72941-7bc5c9e8.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 10.495s
    Paused Time: 0s
Effective CPU Utilization: 42.6% (30.679 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 10.495
        Serial Time (outside parallel regions): 1.441s (13.7%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.450s
            rand                        libc.so.6             0.210s
            ompc_set_num_threads        libiomp5.so           0.040s
            [Outside any known module]  [Unknown]             0.030s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 9.054s (86.3%)
            Estimated Ideal Time: 8.792s (83.8%)
            OpenMP Potential Gain: 0.263s (2.5%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 10.652s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 8.154s                        100.0%          58
        Condition Variable 0x8c09b9c8                                 2.497s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x38509ecd                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           5
    Spin and Overhead Time: 7.170s (2.2% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  6.310s                  1.9%
        __kmp_join_barrier    libiomp5.so                  0.470s                  0.1%
        __kmp_join_call       libiomp5.so                  0.330s                  0.1%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.020s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 10 MB 
    Collection start time: 23:50:48 21/04/2021 UTC
    Collection stop time: 23:50:59 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_40 > lavaMD-log/vtune/36_40_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_40 --  lavaMD -cores 36 -boxes1d 40 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_40 -command stop.
Configuration used: cores = 36, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.104933999479 s,  1.075792431831 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
 9.649177551270 s, 98.924209594727 % : CPU/MCPU: KERNEL
Total time:
9.754112243652 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-73062-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-73062-quartz3070.sc' filvtune: Executing actions 12 % Loading '73076.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-73076-aa391dc9.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 10.650s
    SP GFLOPS: 0.000
    DP GFLOPS: 48.017
    x87 GFLOPS: 0.000
    CPI Rate: 0.424
    Average CPU Frequency: 2.596 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 82.9% (29.861 out of 36)
    Effective Logical Core Utilization: 41.9% (30.160 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.190s (11.2%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.546s
        [Loop@0x401849 in main]     lavaMD                 0.115s
        random                      libc-2.17.so           0.085s
        random_r                    libc-2.17.so           0.050s
        rand                        libc-2.17.so           0.040s
        [Others]                    N/A                    0.065s
    Parallel Region Time: 9.460s (88.8%)
        Estimated Ideal Time: 8.929s (83.8%)
        OpenMP Potential Gain: 0.530s (5.0%)
Memory Bound: 8.9% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.2% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.8% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.088
    FP Arith/Mem Wr Instr. Ratio: 2.586
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 112 MB 
    Collection start time: 23:51:19 21/04/2021 UTC
    Collection stop time: 23:51:29 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_40 > lavaMD-log/vtune/36_40_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_40 --  lavaMD -cores 18 -boxes1d 40 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_40 -command stop.
Configuration used: cores = 18, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.077538996935 s,  0.430110901594 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
17.950138092041 s, 99.569892883301 % : CPU/MCPU: KERNEL
Total time:
18.027675628662 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-73210-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-73210-quartz3070.sc' filvtune: Executing actions 12 % Loading '73210-73215.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-73215-94458b9f.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `pinbin'               vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for dangling locations     
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/bin64/pinbin'.
vtune: Executing actions 20 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libpthread.so.0'      vtune: Executing actions 22 % Resolving information for `libpthread.so.0'      vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 18.923s
    Paused Time: 0s
Effective CPU Utilization: 23.2% (16.716 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 18.923
        Serial Time (outside parallel regions): 1.034s (5.5%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.370s
            rand                        libc.so.6             0.180s
            ompc_set_num_threads        libiomp5.so           0.040s
            [Outside any known module]  [Unknown]             0.020s
            __kmp_fork_call             libiomp5.so           0.010s
            func@0x401390               lavaMD                0.010s
        Parallel Region Time: 17.888s (94.5%)
            Estimated Ideal Time: 17.468s (92.3%)
            OpenMP Potential Gain: 0.420s (2.2%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 6.216s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 3.766s                        100.0%          23
        Condition Variable 0x8c09b9c8                                 2.449s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 3.910s (1.2% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.090s                  1.0%
        __kmp_join_barrier    libiomp5.so                  0.450s                  0.1%
        __kmp_join_call       libiomp5.so                  0.320s                  0.1%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 9 MB 
    Collection start time: 23:52:01 21/04/2021 UTC
    Collection stop time: 23:52:20 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_40 > lavaMD-log/vtune/18_40_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_40 --  lavaMD -cores 18 -boxes1d 40 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_40 -command stop.
Configuration used: cores = 18, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.071542002261 s,  0.392204344273 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
18.169460296631 s, 99.607795715332 % : CPU/MCPU: KERNEL
Total time:
18.241001129150 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-73323-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-73323-quartz3070.sc' filvtune: Executing actions 12 % Loading '73337.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-73337-0804eacc.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libdl-2.17.so'        vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 18.929s
    SP GFLOPS: 0.000
    DP GFLOPS: 27.202
    x87 GFLOPS: 0.000
    CPI Rate: 0.416
    Average CPU Frequency: 2.599 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 46.3% (16.671 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.2% (16.673 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.863s (4.6%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.451s
        [Loop@0x401849 in main]     lavaMD                 0.090s
        random                      libc-2.17.so           0.065s
        random_r                    libc-2.17.so           0.065s
        rand                        libc-2.17.so           0.025s
        [Others]                    N/A                    0.030s
    Parallel Region Time: 18.066s (95.4%)
        Estimated Ideal Time: 17.584s (92.9%)
        OpenMP Potential Gain: 0.482s (2.5%)
Memory Bound: 9.2% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.6% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.103
    FP Arith/Mem Wr Instr. Ratio: 2.607
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 107 MB 
    Collection start time: 23:52:38 21/04/2021 UTC
    Collection stop time: 23:52:57 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_40 > lavaMD-log/vtune/18_40_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_40 --  lavaMD -cores 9 -boxes1d 40 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_40 -command stop.
Configuration used: cores = 9, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.122129999101 s,  0.367654174566 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
33.096588134766 s, 99.632354736328 % : CPU/MCPU: KERNEL
Total time:
33.218715667725 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-73458-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-73458-quartz3070.sc' filvtune: Executing actions 12 % Loading '73458-73463.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-73463-aa9c3255.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 33.915s
    Paused Time: 0s
Effective CPU Utilization: 11.7% (8.445 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 33.915
        Serial Time (outside parallel regions): 0.844s (2.5%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.360s
            rand                        libc.so.6             0.180s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.010s
        Parallel Region Time: 33.071s (97.5%)
            Estimated Ideal Time: 31.756s (93.6%)
            OpenMP Potential Gain: 1.315s (3.9%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 10.911s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                                    Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                               7.646s                        100.0%          11
        Condition Variable 0x8c09b9c8                                                               3.264s                        100.0%           1
        Stream 0x14cedaf4                                                                           0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                                                             0.000s                        100.0%           2
        Stream /sys/kernel/mm/transparent_hugepage/enabled 0xb68f2e09                               0.000s                        100.0%           1
        [Others]                                                                                    0.000s                        100.0%           4
    Spin and Overhead Time: 1.690s (0.6% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.390s                  0.5%
        __kmp_join_call       libiomp5.so                  0.260s                  0.1%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 8 MB 
    Collection start time: 23:53:28 21/04/2021 UTC
    Collection stop time: 23:54:02 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_40 > lavaMD-log/vtune/9_40_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_40 --  lavaMD -cores 9 -boxes1d 40 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_40 -command stop.
Configuration used: cores = 9, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.102367997169 s,  0.302420854568 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
33.747146606445 s, 99.697578430176 % : CPU/MCPU: KERNEL
Total time:
33.849517822266 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-73573-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-73573-quartz3070.sc' filvtune: Executing actions 12 % Loading '73588.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-73588-c77bfae1.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 34.617s
    SP GFLOPS: 0.000
    DP GFLOPS: 14.840
    x87 GFLOPS: 0.000
    CPI Rate: 0.417
    Average CPU Frequency: 2.852 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.0% (8.286 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.6% (8.336 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.925s (2.7%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.441s
        [Loop@0x401849 in main]     lavaMD                 0.115s
        random                      libc-2.17.so           0.080s
        random_r                    libc-2.17.so           0.055s
        [Loop@0x40197e in main]     lavaMD                 0.040s
        [Others]                    N/A                    0.065s
    Parallel Region Time: 33.692s (97.3%)
        Estimated Ideal Time: 32.523s (94.0%)
        OpenMP Potential Gain: 1.169s (3.4%)
Memory Bound: 9.0% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.7% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.3% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.105
    FP Arith/Mem Wr Instr. Ratio: 2.607
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 106 MB 
    Collection start time: 23:54:20 21/04/2021 UTC
    Collection stop time: 23:54:54 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_40 > lavaMD-log/vtune/9_40_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_40 --  lavaMD -cores 4 -boxes1d 40 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_40 -command stop.
Configuration used: cores = 4, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.172006994486 s,  0.250845074654 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
68.399002075195 s, 99.749153137207 % : CPU/MCPU: KERNEL
Total time:
68.571006774902 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-73712-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-73712-quartz3070.sc' filvtune: Executing actions 12 % Loading '73712-73717.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-73717-0195576e.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libstlport-dynamic.so'vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/pinruntime/libstlport-dynamic.so'.
vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `pinbin'               vtune: Executing actions 20 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/bin64/pinbin'.
vtune: Executing actions 21 % Resolving information for `libpthread.so.0'      vtune: Executing actions 22 % Resolving information for `libpthread.so.0'      vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 69.238s
    Paused Time: 0s
Effective CPU Utilization: 5.3% (3.812 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 69.238
        Serial Time (outside parallel regions): 0.845s (1.2%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.420s
            rand                        libc.so.6             0.130s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 68.393s (98.8%)
            Estimated Ideal Time: 65.853s (95.1%)
            OpenMP Potential Gain: 2.540s (3.7%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 9.725s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 4.920s                        100.0%           2
        Condition Variable 0x8c09b9c8                                 4.804s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.710s (0.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.460s                  0.2%
        __kmp_join_call       libiomp5.so                  0.200s                  0.1%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 8 MB 
    Collection start time: 23:55:25 21/04/2021 UTC
    Collection stop time: 23:56:34 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_40 > lavaMD-log/vtune/4_40_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_40 --  lavaMD -cores 4 -boxes1d 40 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_40 -command stop.
Configuration used: cores = 4, boxes1d = 40
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.076471000910 s,  0.111169822514 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
68.711082458496 s, 99.888832092285 % : CPU/MCPU: KERNEL
Total time:
68.787551879883 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-509-quartz3070.sc' file vtune: Executing actions 12 % Loading 'systemcollector-509-quartz3070.sc' file vtune: Executing actions 12 % Loading '524.perf' file                          vtune: Executing actions 12 % Loading 'userapicollector-524-5ddfea6b.trace' filvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 69.558s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.419
    x87 GFLOPS: 0.000
    CPI Rate: 0.413
    Average CPU Frequency: 3.108 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.5% (3.774 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.2% (3.777 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 0.872s (1.3%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.406s
        [Loop@0x401849 in main]     lavaMD                 0.110s
        random_r                    libc-2.17.so           0.095s
        random                      libc-2.17.so           0.075s
        [Loop@0x40197e in main]     lavaMD                 0.030s
        [Others]                    N/A                    0.030s
    Parallel Region Time: 68.685s (98.7%)
        Estimated Ideal Time: 66.841s (96.1%)
        OpenMP Potential Gain: 1.844s (2.7%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.111
    FP Arith/Mem Wr Instr. Ratio: 2.626
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "40" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 102 MB 
    Collection start time: 23:56:53 21/04/2021 UTC
    Collection stop time: 23:58:02 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_40 > lavaMD-log/vtune/4_40_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_40'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_50 --  lavaMD -cores 36 -boxes1d 50 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_50 -command stop.
Configuration used: cores = 36, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.097249001265 s,  0.531951427460 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
18.184307098389 s, 99.468055725098 % : CPU/MCPU: KERNEL
Total time:
18.281555175781 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-687-quartz3070.sc' file vtune: Executing actions 12 % Loading 'systemcollector-687-quartz3070.sc' file vtune: Executing actions 12 % Loading '687-692.0.trace' file                   vtune: Executing actions 12 % Loading 'userapicollector-692-cd4501fe.trace' filvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 20.015s
    Paused Time: 0s
Effective CPU Utilization: 43.9% (31.610 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 20.015
        Serial Time (outside parallel regions): 2.038s (10.2%)

            Top Serial Hotspots (outside parallel regions)
            Function                        Module       Serial CPU Time
            ------------------------------  -----------  ---------------
            main                            lavaMD                0.780s
            rand                            libc.so.6             0.280s
            [Outside any known module]      [Unknown]             0.030s
            ompc_set_num_threads            libiomp5.so           0.030s
            KMPNativeAffinity::Mask::~Mask  libiomp5.so           0.010s
            func@0x401390                   lavaMD                0.010s
        Parallel Region Time: 17.977s (89.8%)
            Estimated Ideal Time: 17.417s (87.0%)
            OpenMP Potential Gain: 0.561s (2.8%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 25.388s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                21.168s                        100.0%          67
        Condition Variable 0x8c09b9c8                                 4.219s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           6
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 8.220s (1.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function                                                                 Module       Spin and Overhead Time  (% from CPU Time)(%)
        -----------------------------------------------------------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier                                                       libiomp5.so                  6.840s                  1.1%
        __kmp_join_barrier                                                       libiomp5.so                  0.970s                  0.2%
        __kmp_join_call                                                          libiomp5.so                  0.370s                  0.1%
        ompc_set_num_threads                                                     libiomp5.so                  0.030s                  0.0%
        _INTERNAL_26_______src_z_Linux_util_cpp_20354e55::__kmp_itt_thread_name  libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 16 MB 
    Collection start time: 23:58:33 21/04/2021 UTC
    Collection stop time: 23:58:53 21/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_50 > lavaMD-log/vtune/36_50_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_50 --  lavaMD -cores 36 -boxes1d 50 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_50 -command stop.
Configuration used: cores = 36, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.070229001343 s,  0.358198016882 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
19.535963058472 s, 99.641792297363 % : CPU/MCPU: KERNEL
Total time:
19.606193542480 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-824-quartz3070.sc' file vtune: Executing actions 12 % Loading 'systemcollector-824-quartz3070.sc' file vtune: Executing actions 12 % Loading '838.perf' file                          vtune: Executing actions 12 % Loading 'userapicollector-838-1c53cd62.trace' filvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 20.984s
    SP GFLOPS: 0.000
    DP GFLOPS: 47.565
    x87 GFLOPS: 0.000
    CPI Rate: 0.437
    Average CPU Frequency: 2.598 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 83.0% (29.880 out of 36)
    Effective Logical Core Utilization: 43.3% (31.176 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.636s (7.8%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.732s
        [Loop@0x401849 in main]     lavaMD                 0.246s
        random_r                    libc-2.17.so           0.140s
        random                      libc-2.17.so           0.125s
        rand                        libc-2.17.so           0.065s
        [Others]                    N/A                    0.135s
    Parallel Region Time: 19.348s (92.2%)
        Estimated Ideal Time: 18.249s (87.0%)
        OpenMP Potential Gain: 1.099s (5.2%)
Memory Bound: 8.8% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.1% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.9% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.081
    FP Arith/Mem Wr Instr. Ratio: 2.569
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 219 MB 
    Collection start time: 23:59:13 21/04/2021 UTC
    Collection stop time: 23:59:34 21/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_50 > lavaMD-log/vtune/36_50_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_50 --  lavaMD -cores 18 -boxes1d 50 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_50 -command stop.
Configuration used: cores = 18, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.490128993988 s,  1.358830690384 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
35.579780578613 s, 98.641166687012 % : CPU/MCPU: KERNEL
Total time:
36.069908142090 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-1019-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-1019-quartz3070.sc' filevtune: Executing actions 12 % Loading '1019-1026.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-1026-f97224de.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 37.569s
    Paused Time: 0s
Effective CPU Utilization: 23.0% (16.583 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 37.569
        Serial Time (outside parallel regions): 2.192s (5.8%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.830s
            rand                        libc.so.6             0.310s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.010s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 35.377s (94.2%)
            Estimated Ideal Time: 34.527s (91.9%)
            OpenMP Potential Gain: 0.850s (2.3%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 15.887s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                11.468s                        100.0%          30
        Condition Variable 0x8c09b9c8                                 4.408s                        100.0%           1
        Mutex 0x6cb3026d                                              0.010s                        100.0%           3
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 3.849s (0.6% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.239s                  0.5%
        __kmp_join_barrier    libiomp5.so                  0.360s                  0.1%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 15 MB 
    Collection start time: 00:00:21 22/04/2021 UTC
    Collection stop time: 00:00:58 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_50 > lavaMD-log/vtune/18_50_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_50 --  lavaMD -cores 18 -boxes1d 50 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_50 -command stop.
Configuration used: cores = 18, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.078227996826 s,  0.215789765120 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
36.173725128174 s, 99.784210205078 % : CPU/MCPU: KERNEL
Total time:
36.251953125000 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-1236-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-1236-quartz3070.sc' filevtune: Executing actions 12 % Loading '1251.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-1251-da356341.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 37.878s
    SP GFLOPS: 0.000
    DP GFLOPS: 26.937
    x87 GFLOPS: 0.000
    CPI Rate: 0.418
    Average CPU Frequency: 2.600 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 45.9% (16.528 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.0% (16.556 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.808s (4.8%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.712s
        [Loop@0x401849 in main]     lavaMD                 0.251s
        random_r                    libc-2.17.so           0.160s
        random                      libc-2.17.so           0.105s
        [Loop@0x40197e in main]     lavaMD                 0.060s
        [Others]                    N/A                    0.125s
    Parallel Region Time: 36.070s (95.2%)
        Estimated Ideal Time: 34.958s (92.3%)
        OpenMP Potential Gain: 1.112s (2.9%)
Memory Bound: 9.6% of Pipeline Slots
    Cache Bound: 5.8% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.110
    FP Arith/Mem Wr Instr. Ratio: 2.619
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 205 MB 
    Collection start time: 00:01:16 22/04/2021 UTC
    Collection stop time: 00:01:54 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_50 > lavaMD-log/vtune/18_50_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_50 --  lavaMD -cores 9 -boxes1d 50 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_50 -command stop.
Configuration used: cores = 9, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.103634998202 s,  0.159682929516 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
64.796859741211 s, 99.840316772461 % : CPU/MCPU: KERNEL
Total time:
64.900489807129 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-1403-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-1403-quartz3070.sc' filevtune: Executing actions 12 % Loading '1403-1408.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-1408-6aacf2d9.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 66.233s
    Paused Time: 0s
Effective CPU Utilization: 12.0% (8.676 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 66.233
        Serial Time (outside parallel regions): 1.477s (2.2%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                0.780s
            rand                        libc.so.6             0.270s
            [Outside any known module]  [Unknown]             0.040s
            func@0x401390               lavaMD                0.030s
            ompc_set_num_threads        libiomp5.so           0.030s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 64.756s (97.8%)
            Estimated Ideal Time: 63.682s (96.1%)
            OpenMP Potential Gain: 1.074s (1.6%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 8.969s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                 4.781s                        100.0%          11
        Condition Variable 0x8c09b9c8                                 4.188s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 1.920s (0.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.480s                  0.3%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 14 MB 
    Collection start time: 00:02:40 22/04/2021 UTC
    Collection stop time: 00:03:47 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_50 > lavaMD-log/vtune/9_50_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_50 --  lavaMD -cores 9 -boxes1d 50 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_50 -command stop.
Configuration used: cores = 9, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.059434998780 s,  0.088813617826 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
66.861602783203 s, 99.911186218262 % : CPU/MCPU: KERNEL
Total time:
66.921043395996 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-1556-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-1556-quartz3070.sc' filevtune: Executing actions 12 % Loading '1570.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-1570-2aad0d54.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 68.355s
    SP GFLOPS: 0.000
    DP GFLOPS: 14.882
    x87 GFLOPS: 0.000
    CPI Rate: 0.417
    Average CPU Frequency: 2.851 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.1% (8.309 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.6% (8.342 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.550s (2.3%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.636s
        random_r                    libc-2.17.so           0.205s
        [Loop@0x401849 in main]     lavaMD                 0.175s
        random                      libc-2.17.so           0.100s
        [Loop@0x40197e in main]     lavaMD                 0.060s
        [Others]                    N/A                    0.075s
    Parallel Region Time: 66.805s (97.7%)
        Estimated Ideal Time: 64.434s (94.3%)
        OpenMP Potential Gain: 2.371s (3.5%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.6% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.108
    FP Arith/Mem Wr Instr. Ratio: 2.620
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 204 MB 
    Collection start time: 00:04:09 22/04/2021 UTC
    Collection stop time: 00:05:18 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_50 > lavaMD-log/vtune/9_50_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_50 --  lavaMD -cores 4 -boxes1d 50 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_50 -command stop.
Configuration used: cores = 4, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.088583998382 s,  0.064801923931 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
136.611068725586 s, 99.935203552246 % : CPU/MCPU: KERNEL
Total time:
136.699645996094 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-1736-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-1736-quartz3070.sc' filevtune: Executing actions 12 % Loading '1736-1741.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-1741-eacca886.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libstlport-dynamic.so'
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/pinruntime/libstlport-dynamic.so'.
vtune: Executing actions 20 % Resolving information for `libstlport-dynamic.so'vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `pinbin'               vtune: Executing actions 21 % Resolving information for `pinbin'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/bin64/pinbin'.
vtune: Executing actions 22 % Resolving information for `pinbin'               vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 137.892s
    Paused Time: 0s
Effective CPU Utilization: 5.3% (3.820 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 137.892
        Serial Time (outside parallel regions): 1.287s (0.9%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module           Serial CPU Time
            --------------------------  ---------------  ---------------
            main                        lavaMD                    0.830s
            rand                        libc.so.6                 0.210s
            ompc_set_num_threads        libiomp5.so               0.040s
            [Outside any known module]  [Unknown]                 0.030s
            func@0x401390               lavaMD                    0.020s
            __pthread_create_2_1        libpthread.so.0           0.010s
        Parallel Region Time: 136.606s (99.1%)
            Estimated Ideal Time: 131.416s (95.3%)
            OpenMP Potential Gain: 5.190s (3.8%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 20.352s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x8c09b9c8                                10.303s                        100.0%           1
        Condition Variable 0x74c978ed                                10.048s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x38509ecd                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.750s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module           Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  ---------------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                      0.500s                  0.1%
        __kmp_join_call       libiomp5.so                      0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                      0.040s                  0.0%
        __pthread_create_2_1  libpthread.so.0                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 13 MB 
    Collection start time: 00:06:00 22/04/2021 UTC
    Collection stop time: 00:08:18 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_50 > lavaMD-log/vtune/4_50_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_50 --  lavaMD -cores 4 -boxes1d 50 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_50 -command stop.
Configuration used: cores = 4, boxes1d = 50
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.075635999441 s,  0.054226703942 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
139.405456542969 s, 99.945777893066 % : CPU/MCPU: KERNEL
Total time:
139.481094360352 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-1932-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-1932-quartz3070.sc' filevtune: Executing actions 12 % Loading '1947.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-1947-403722d0.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 140.910s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.251
    x87 GFLOPS: 0.000
    CPI Rate: 0.413
    Average CPU Frequency: 3.072 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.3% (3.715 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.2% (3.721 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 1.524s (1.1%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              0.692s
        [Loop@0x401849 in main]     lavaMD                 0.215s
        random_r                    libc-2.17.so           0.195s
        random                      libc-2.17.so           0.130s
        [Loop@0x40197e in main]     lavaMD                 0.065s
        [Others]                    N/A                    0.130s
    Parallel Region Time: 139.386s (98.9%)
        Estimated Ideal Time: 133.478s (94.7%)
        OpenMP Potential Gain: 5.908s (4.2%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.116
    FP Arith/Mem Wr Instr. Ratio: 2.629
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "50" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 196 MB 
    Collection start time: 00:08:36 22/04/2021 UTC
    Collection stop time: 00:10:57 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_50 > lavaMD-log/vtune/4_50_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_50'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_60 --  lavaMD -cores 36 -boxes1d 60 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_60 -command stop.
Configuration used: cores = 36, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.083030998707 s,  0.268070250750 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
30.890567779541 s, 99.731925964355 % : CPU/MCPU: KERNEL
Total time:
30.973600387573 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-2216-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-2216-quartz3070.sc' filevtune: Executing actions 12 % Loading '2216-2221.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-2221-069ff6c0.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 33.308s
    Paused Time: 0s
Effective CPU Utilization: 45.5% (32.781 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 33.308
        Serial Time (outside parallel regions): 2.538s (7.6%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                1.170s
            rand                        libc.so.6             0.670s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 30.771s (92.4%)
            Estimated Ideal Time: 30.213s (90.7%)
            OpenMP Potential Gain: 0.558s (1.7%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 22.996s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                17.264s                        100.0%          67
        Condition Variable 0x8c09b9c8                                 5.731s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.001s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           5
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 7.709s (0.7% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  6.819s                  0.6%
        __kmp_join_barrier    libiomp5.so                  0.470s                  0.0%
        __kmp_join_call       libiomp5.so                  0.370s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 25 MB 
    Collection start time: 00:11:30 22/04/2021 UTC
    Collection stop time: 00:12:04 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_60 > lavaMD-log/vtune/36_60_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_60 --  lavaMD -cores 36 -boxes1d 60 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_60 -command stop.
Configuration used: cores = 36, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.059112001210 s,  0.183154657483 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
32.215251922607 s, 99.816848754883 % : CPU/MCPU: KERNEL
Total time:
32.274364471436 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-2358-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-2358-quartz3070.sc' filevtune: Executing actions 12 % Loading '2372.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-2372-fcfaa39a.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 34.358s
    SP GFLOPS: 0.000
    DP GFLOPS: 51.156
    x87 GFLOPS: 0.000
    CPI Rate: 0.427
    Average CPU Frequency: 2.597 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 88.2% (31.751 out of 36)
    Effective Logical Core Utilization: 45.1% (32.453 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 2.318s (6.7%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.183s
        [Loop@0x401849 in main]     lavaMD                 0.366s
        random_r                    libc-2.17.so           0.261s
        random                      libc-2.17.so           0.165s
        rand                        libc-2.17.so           0.070s
        [Others]                    N/A                    0.135s
    Parallel Region Time: 32.040s (93.3%)
        Estimated Ideal Time: 31.109s (90.5%)
        OpenMP Potential Gain: 0.931s (2.7%)
Memory Bound: 9.1% of Pipeline Slots
    Cache Bound: 5.6% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.5% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.5% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.099
    FP Arith/Mem Wr Instr. Ratio: 2.596
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 368 MB 
    Collection start time: 00:12:22 22/04/2021 UTC
    Collection stop time: 00:12:56 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_60 > lavaMD-log/vtune/36_60_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_60 --  lavaMD -cores 18 -boxes1d 60 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_60 -command stop.
Configuration used: cores = 18, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.095311999321 s,  0.155557662249 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
61.175861358643 s, 99.844444274902 % : CPU/MCPU: KERNEL
Total time:
61.271171569824 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-2539-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-2539-quartz3070.sc' filevtune: Executing actions 12 % Loading '2539-2544.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-2544-94633a52.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 63.434s
    Paused Time: 0s
Effective CPU Utilization: 23.7% (17.055 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 63.434
        Serial Time (outside parallel regions): 2.327s (3.7%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                1.270s
            rand                        libc.so.6             0.560s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.010s
        Parallel Region Time: 61.107s (96.3%)
            Estimated Ideal Time: 59.976s (94.5%)
            OpenMP Potential Gain: 1.131s (1.8%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 20.096s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                13.718s                        100.0%          28
        Condition Variable 0x8c09b9c8                                 6.378s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           3
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 3.880s (0.4% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.300s                  0.3%
        __kmp_join_call       libiomp5.so                  0.340s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 24 MB 
    Collection start time: 00:13:41 22/04/2021 UTC
    Collection stop time: 00:14:45 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_60 > lavaMD-log/vtune/18_60_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_60 --  lavaMD -cores 18 -boxes1d 60 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_60 -command stop.
Configuration used: cores = 18, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.060593999922 s,  0.097901411355 % : MCPU: SET DEVICE
 0.000001000000 s,  0.000001615695 % : CPU/MCPU: INPUTS
61.832279205322 s, 99.902091979980 % : CPU/MCPU: KERNEL
Total time:
61.892875671387 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-2692-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-2692-quartz3070.sc' filevtune: Executing actions 12 % Loading '2706.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-2706-6e429dfb.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 63.921s
    SP GFLOPS: 0.000
    DP GFLOPS: 27.774
    x87 GFLOPS: 0.000
    CPI Rate: 0.415
    Average CPU Frequency: 2.599 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 47.0% (16.933 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.5% (16.949 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 2.192s (3.4%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.083s
        [Loop@0x401849 in main]     lavaMD                 0.336s
        random_r                    libc-2.17.so           0.246s
        random                      libc-2.17.so           0.175s
        rand                        libc-2.17.so           0.095s
        [Others]                    N/A                    0.130s
    Parallel Region Time: 61.729s (96.6%)
        Estimated Ideal Time: 60.436s (94.5%)
        OpenMP Potential Gain: 1.294s (2.0%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.112
    FP Arith/Mem Wr Instr. Ratio: 2.622
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 350 MB 
    Collection start time: 00:15:07 22/04/2021 UTC
    Collection stop time: 00:16:11 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_60 > lavaMD-log/vtune/18_60_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_60 --  lavaMD -cores 9 -boxes1d 60 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_60 -command stop.
Configuration used: cores = 9, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.334459006786 s,  0.287489861250 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
116.003219604492 s, 99.712516784668 % : CPU/MCPU: KERNEL
Total time:
116.337669372559 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-2886-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-2886-quartz3070.sc' filevtune: Executing actions 12 % Loading '2886-2892.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-2892-428ecca3.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 118.829s
    Paused Time: 0s
Effective CPU Utilization: 11.8% (8.483 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 118.829
        Serial Time (outside parallel regions): 2.937s (2.5%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                1.390s
            rand                        libc.so.6             0.440s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
        Parallel Region Time: 115.893s (97.5%)
            Estimated Ideal Time: 111.694s (94.0%)
            OpenMP Potential Gain: 4.199s (3.5%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 38.087s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                28.210s                        100.0%          15
        Condition Variable 0x8c09b9c8                                 9.877s                        100.0%           3
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 2.640s (0.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.600s                  0.2%
        __kmp_join_call       libiomp5.so                  0.600s                  0.1%
        __kmp_join_barrier    libiomp5.so                  0.400s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 22 MB 
    Collection start time: 00:16:53 22/04/2021 UTC
    Collection stop time: 00:18:53 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_60 > lavaMD-log/vtune/9_60_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_60 --  lavaMD -cores 9 -boxes1d 60 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_60 -command stop.
Configuration used: cores = 9, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.063864000142 s,  0.056256860495 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
113.458290100098 s, 99.943748474121 % : CPU/MCPU: KERNEL
Total time:
113.522155761719 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-3073-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-3073-quartz3070.sc' filevtune: Executing actions 12 % Loading '3088.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-3088-9bb11a29.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 115.695s
    SP GFLOPS: 0.000
    DP GFLOPS: 15.329
    x87 GFLOPS: 0.000
    CPI Rate: 0.415
    Average CPU Frequency: 2.844 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.7% (8.522 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.9% (8.557 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 2.293s (2.0%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.088s
        [Loop@0x401849 in main]     lavaMD                 0.391s
        random_r                    libc-2.17.so           0.246s
        random                      libc-2.17.so           0.215s
        [Loop@0x40197e in main]     lavaMD                 0.075s
        [Others]                    N/A                    0.170s
    Parallel Region Time: 113.402s (98.0%)
        Estimated Ideal Time: 111.892s (96.7%)
        OpenMP Potential Gain: 1.510s (1.3%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.112
    FP Arith/Mem Wr Instr. Ratio: 2.628
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 349 MB 
    Collection start time: 00:19:12 22/04/2021 UTC
    Collection stop time: 00:21:08 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_60 > lavaMD-log/vtune/9_60_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_60 --  lavaMD -cores 4 -boxes1d 60 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_60 -command stop.
Configuration used: cores = 4, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.086373001337 s,  0.036713078618 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
235.178543090820 s, 99.963287353516 % : CPU/MCPU: KERNEL
Total time:
235.264923095703 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-3316-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-3316-quartz3070.sc' filevtune: Executing actions 12 % Loading '3316-3321.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-3321-0c22f10f.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 237.285s
    Paused Time: 0s
Effective CPU Utilization: 5.4% (3.861 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 237.285
        Serial Time (outside parallel regions): 2.113s (0.9%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                1.350s
            rand                        libc.so.6             0.480s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.030s
            __kmp_fork_call             libiomp5.so           0.012s
        Parallel Region Time: 235.172s (99.1%)
            Estimated Ideal Time: 228.593s (96.3%)
            OpenMP Potential Gain: 6.580s (2.8%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 26.051s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x8c09b9c8                                13.047s                        100.0%           1
        Condition Variable 0x74c978ed                                13.004s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.782s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.540s                  0.1%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.012s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 20 MB 
    Collection start time: 00:21:53 22/04/2021 UTC
    Collection stop time: 00:25:51 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_60 > lavaMD-log/vtune/4_60_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_60 --  lavaMD -cores 4 -boxes1d 60 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_60 -command stop.
Configuration used: cores = 4, boxes1d = 60
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.062536999583 s,  0.026489246637 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
236.021942138672 s, 99.973503112793 % : CPU/MCPU: KERNEL
Total time:
236.084472656250 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-3593-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-3593-quartz3070.sc' filevtune: Executing actions 12 % Loading '3608.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-3608-84f29b81.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 238.216s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.449
    x87 GFLOPS: 0.000
    CPI Rate: 0.412
    Average CPU Frequency: 3.094 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.6% (3.798 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.3% (3.801 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 2.220s (0.9%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.118s
        [Loop@0x401849 in main]     lavaMD                 0.286s
        random_r                    libc-2.17.so           0.261s
        random                      libc-2.17.so           0.236s
        [Loop@0x40197e in main]     lavaMD                 0.070s
        [Others]                    N/A                    0.150s
    Parallel Region Time: 235.996s (99.1%)
        Estimated Ideal Time: 230.543s (96.8%)
        OpenMP Potential Gain: 5.452s (2.3%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.112
    FP Arith/Mem Wr Instr. Ratio: 2.628
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "60" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 345 MB 
    Collection start time: 00:26:09 22/04/2021 UTC
    Collection stop time: 00:30:07 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_60 > lavaMD-log/vtune/4_60_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_60'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_70 --  lavaMD -cores 36 -boxes1d 70 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_70 -command stop.
Configuration used: cores = 36, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.086979001760 s,  0.137417271733 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
63.208557128906 s, 99.862579345703 % : CPU/MCPU: KERNEL
Total time:
63.295536041260 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-3994-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-3994-quartz3070.sc' filevtune: Executing actions 12 % Loading '3994-4000.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-4000-9509ed53.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 67.048s
    Paused Time: 0s
Effective CPU Utilization: 36.2% (26.094 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 67.048
        Serial Time (outside parallel regions): 3.959s (5.9%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                2.279s
            rand                        libc.so.6             0.791s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.030s
        Parallel Region Time: 63.089s (94.1%)
            Estimated Ideal Time: 48.457s (72.3%)
            OpenMP Potential Gain: 14.632s (21.8%)
             | The time wasted on load imbalance or parallel work arrangement is
             | significant and negatively impacts the application performance
             | and scalability. Explore OpenMP regions with the highest metric
             | values. Make sure the workload of the regions is enough and the
             | loop schedule is optimal.
             |
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 534.118s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                               511.762s                        100.0%          70
        Condition Variable 0x8c09b9c8                                22.353s                        100.0%           2
        Mutex 0x6cb3026d                                              0.002s                        100.0%          10
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 8.290s (0.5% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  6.868s                  0.4%
        __kmp_join_barrier    libiomp5.so                  0.862s                  0.0%
        __kmp_join_call       libiomp5.so                  0.520s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 37 MB 
    Collection start time: 00:30:51 22/04/2021 UTC
    Collection stop time: 00:31:58 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_70 > lavaMD-log/vtune/36_70_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_70 --  lavaMD -cores 36 -boxes1d 70 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_70 -command stop.
Configuration used: cores = 36, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.067971996963 s,  0.130665570498 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
51.951850891113 s, 99.869331359863 % : CPU/MCPU: KERNEL
Total time:
52.019824981689 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-4168-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-4168-quartz3070.sc' filevtune: Executing actions 12 % Loading '4183.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-4183-f0fe52e7.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving information for `lavaMD'               vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 55.785s
    SP GFLOPS: 0.000
    DP GFLOPS: 50.377
    x87 GFLOPS: 0.000
    CPI Rate: 0.423
    Average CPU Frequency: 2.598 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 87.0% (31.320 out of 36)
    Effective Logical Core Utilization: 43.9% (31.633 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 4.007s (7.2%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.809s
        [Loop@0x401849 in main]     lavaMD                 0.702s
        random_r                    libc-2.17.so           0.511s
        random                      libc-2.17.so           0.331s
        rand                        libc-2.17.so           0.135s
        [Others]                    N/A                    0.326s
    Parallel Region Time: 51.778s (92.8%)
        Estimated Ideal Time: 49.227s (88.2%)
        OpenMP Potential Gain: 2.551s (4.6%)
Memory Bound: 9.5% of Pipeline Slots
    Cache Bound: 5.7% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.6% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.4% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.104
    FP Arith/Mem Wr Instr. Ratio: 2.600
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 495 MB 
    Collection start time: 00:32:18 22/04/2021 UTC
    Collection stop time: 00:33:14 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_70 > lavaMD-log/vtune/36_70_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_70 --  lavaMD -cores 18 -boxes1d 70 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_70 -command stop.
Configuration used: cores = 18, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.069960996509 s,  0.071801602840 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
97.366577148438 s, 99.928199768066 % : CPU/MCPU: KERNEL
Total time:
97.436538696289 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-4375-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-4375-quartz3070.sc' filevtune: Executing actions 12 % Loading '4375-4380.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-4380-a0003db3.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 100.848s
    Paused Time: 0s
Effective CPU Utilization: 23.7% (17.099 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 100.848
        Serial Time (outside parallel regions): 3.530s (3.5%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                2.100s
            rand                        libc.so.6             0.790s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.010s
        Parallel Region Time: 97.318s (96.5%)
            Estimated Ideal Time: 95.610s (94.8%)
            OpenMP Potential Gain: 1.708s (1.7%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 32.491s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                23.836s                        100.0%          32
        Condition Variable 0x8c09b9c8                                 8.654s                        100.0%           3
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 4.640s (0.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.350s                  0.2%
        __kmp_join_call       libiomp5.so                  0.660s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.590s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 36 MB 
    Collection start time: 00:34:09 22/04/2021 UTC
    Collection stop time: 00:35:50 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_70 > lavaMD-log/vtune/18_70_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_70 --  lavaMD -cores 18 -boxes1d 70 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_70 -command stop.
Configuration used: cores = 18, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.066738002002 s,  0.068003796041 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
98.071899414062 s, 99.931991577148 % : CPU/MCPU: KERNEL
Total time:
98.138641357422 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-4565-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-4565-quartz3070.sc' filevtune: Executing actions 12 % Loading '4581.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-4581-b6ebe842.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `lavaMD'               vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 101.358s
    SP GFLOPS: 0.000
    DP GFLOPS: 27.969
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.598 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 47.3% (17.024 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.7% (17.036 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 3.373s (3.3%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.604s
        [Loop@0x401849 in main]     lavaMD                 0.481s
        random_r                    libc-2.17.so           0.391s
        random                      libc-2.17.so           0.346s
        [Loop@0x40197e in main]     lavaMD                 0.125s
        [Others]                    N/A                    0.291s
    Parallel Region Time: 97.985s (96.7%)
        Estimated Ideal Time: 96.340s (95.0%)
        OpenMP Potential Gain: 1.645s (1.6%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.6% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.115
    FP Arith/Mem Wr Instr. Ratio: 2.630
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 472 MB 
    Collection start time: 00:36:10 22/04/2021 UTC
    Collection stop time: 00:37:51 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_70 > lavaMD-log/vtune/18_70_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_70 --  lavaMD -cores 9 -boxes1d 70 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_70 -command stop.
Configuration used: cores = 9, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.080757997930 s,  0.044550549239 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
181.191986083984 s, 99.955451965332 % : CPU/MCPU: KERNEL
Total time:
181.272735595703 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-4792-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-4792-quartz3070.sc' filevtune: Executing actions 12 % Loading '4792-4798.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-4798-7d3c53e0.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 184.754s
    Paused Time: 0s
Effective CPU Utilization: 12.0% (8.653 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 184.754
        Serial Time (outside parallel regions): 3.585s (1.9%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                2.290s
            rand                        libc.so.6             0.840s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.010s
        Parallel Region Time: 181.169s (98.1%)
            Estimated Ideal Time: 177.264s (95.9%)
            OpenMP Potential Gain: 3.905s (2.1%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 35.210s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                23.554s                        100.0%          13
        Condition Variable 0x8c09b9c8                                11.655s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 1.840s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.350s                  0.1%
        __kmp_join_call       libiomp5.so                  0.390s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.060s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 34 MB 
    Collection start time: 00:38:47 22/04/2021 UTC
    Collection stop time: 00:41:52 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_70 > lavaMD-log/vtune/9_70_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_70 --  lavaMD -cores 9 -boxes1d 70 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_70 -command stop.
Configuration used: cores = 9, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.054127998650 s,  0.029649535194 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
182.505218505859 s, 99.970352172852 % : CPU/MCPU: KERNEL
Total time:
182.559341430664 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-5038-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-5038-quartz3070.sc' filevtune: Executing actions 12 % Loading '5052.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-5052-3aa193d0.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 185.880s
    SP GFLOPS: 0.000
    DP GFLOPS: 15.206
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.829 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.6% (8.508 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.9% (8.534 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 3.430s (1.8%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.689s
        [Loop@0x401849 in main]     lavaMD                 0.636s
        random_r                    libc-2.17.so           0.366s
        random                      libc-2.17.so           0.271s
        [Loop@0x40197e in main]     lavaMD                 0.110s
        [Others]                    N/A                    0.236s
    Parallel Region Time: 182.450s (98.2%)
        Estimated Ideal Time: 178.701s (96.1%)
        OpenMP Potential Gain: 3.749s (2.0%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.112
    FP Arith/Mem Wr Instr. Ratio: 2.619
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 475 MB 
    Collection start time: 00:42:13 22/04/2021 UTC
    Collection stop time: 00:45:18 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_70 > lavaMD-log/vtune/9_70_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_70 --  lavaMD -cores 4 -boxes1d 70 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_70 -command stop.
Configuration used: cores = 4, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.076232999563 s,  0.020241528749 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
376.540618896484 s, 99.979759216309 % : CPU/MCPU: KERNEL
Total time:
376.616821289062 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-5331-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-5331-quartz3070.sc' filevtune: Executing actions 12 % Loading '5331-5336.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-5336-9472b86f.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 379.858s
    Paused Time: 0s
Effective CPU Utilization: 5.4% (3.871 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 379.858
        Serial Time (outside parallel regions): 3.322s (0.9%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                1.980s
            rand                        libc.so.6             0.920s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.010s
        Parallel Region Time: 376.537s (99.1%)
            Estimated Ideal Time: 366.921s (96.6%)
            OpenMP Potential Gain: 9.616s (2.5%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 38.554s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                                                    Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                                              19.354s                        100.0%           3
        Condition Variable 0x8c09b9c8                                                              19.199s                        100.0%           1
        Stream 0x14cedaf4                                                                           0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                                                             0.000s                        100.0%           2
        Stream /sys/kernel/mm/transparent_hugepage/enabled 0xb68f2e09                               0.000s                        100.0%           1
        [Others]                                                                                    0.000s                        100.0%           3
    Spin and Overhead Time: 0.830s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.590s                  0.0%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 31 MB 
    Collection start time: 00:46:10 22/04/2021 UTC
    Collection stop time: 00:52:30 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_70 > lavaMD-log/vtune/4_70_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_70 --  lavaMD -cores 4 -boxes1d 70 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_70 -command stop.
Configuration used: cores = 4, boxes1d = 70
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.064269997180 s,  0.016938949004 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
379.357147216797 s, 99.983062744141 % : CPU/MCPU: KERNEL
Total time:
379.421417236328 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-5728-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-5728-quartz3070.sc' filevtune: Executing actions 12 % Loading '5742.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-5742-36119045.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 382.808s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.411
    x87 GFLOPS: 0.000
    CPI Rate: 0.412
    Average CPU Frequency: 3.075 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.5% (3.791 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.3% (3.795 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 3.476s (0.9%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              1.604s
        [Loop@0x401849 in main]     lavaMD                 0.596s
        random_r                    libc-2.17.so           0.406s
        random                      libc-2.17.so           0.361s
        [Loop@0x40197e in main]     lavaMD                 0.140s
        [Others]                    N/A                    0.256s
    Parallel Region Time: 379.332s (99.1%)
        Estimated Ideal Time: 369.706s (96.6%)
        OpenMP Potential Gain: 9.626s (2.5%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.116
    FP Arith/Mem Wr Instr. Ratio: 2.630
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "70" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 457 MB 
    Collection start time: 00:52:48 22/04/2021 UTC
    Collection stop time: 00:59:11 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_70 > lavaMD-log/vtune/4_70_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_70'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_80 --  lavaMD -cores 36 -boxes1d 80 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_80 -command stop.
Configuration used: cores = 36, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.083879001439 s,  0.113287396729 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
73.957015991211 s, 99.886711120605 % : CPU/MCPU: KERNEL
Total time:
74.040893554688 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-6226-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-6226-quartz3070.sc' filevtune: Executing actions 12 % Loading '6226-6231.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-6231-c8c65b5d.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 79.204s
    Paused Time: 0s
Effective CPU Utilization: 45.8% (32.950 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 79.204
        Serial Time (outside parallel regions): 5.375s (6.8%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                3.161s
            rand                        libc.so.6             1.129s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.030s
        Parallel Region Time: 73.829s (93.2%)
            Estimated Ideal Time: 72.305s (91.3%)
            OpenMP Potential Gain: 1.524s (1.9%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 68.087s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                    Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -----------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                              55.043s                        100.0%          69
        Condition Variable 0x8c09b9c8                              11.710s                        100.0%           2
        Condition Variable 0x02215239                               1.332s                        100.0%           2
        Mutex 0x6cb3026d                                            0.001s                        100.0%           7
        Stream 0x14cedaf4                                           0.000s                        100.0%           1
        [Others]                                                    0.000s                        100.0%           5
    Spin and Overhead Time: 8.650s (0.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  6.900s                  0.3%
        __kmp_join_barrier    libiomp5.so                  1.310s                  0.1%
        __kmp_join_call       libiomp5.so                  0.400s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 54 MB 
    Collection start time: 01:00:03 22/04/2021 UTC
    Collection stop time: 01:01:22 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_80 > lavaMD-log/vtune/36_80_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_80 --  lavaMD -cores 36 -boxes1d 80 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_80 -command stop.
Configuration used: cores = 36, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.069677002728 s,  0.091520853341 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
76.062705993652 s, 99.908485412598 % : CPU/MCPU: KERNEL
Total time:
76.132377624512 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-6424-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-6424-quartz3070.sc' filevtune: Executing actions 12 % Loading '6438.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-6438-87672cfa.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc-2.17.so'         
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libc-2.17.so'         
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libc-2.17.so'         vtune: Executing actions 22 % Resolving information for `libc-2.17.so'         vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 81.161s
    SP GFLOPS: 0.000
    DP GFLOPS: 52.100
    x87 GFLOPS: 0.000
    CPI Rate: 0.422
    Average CPU Frequency: 2.596 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 89.3% (32.146 out of 36)
    Effective Logical Core Utilization: 45.2% (32.547 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 5.287s (6.5%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              2.606s
        [Loop@0x401849 in main]     lavaMD                 0.752s
        random_r                    libc-2.17.so           0.571s
        random                      libc-2.17.so           0.501s
        rand                        libc-2.17.so           0.261s
        [Others]                    N/A                    0.381s
    Parallel Region Time: 75.874s (93.5%)
        Estimated Ideal Time: 73.709s (90.8%)
        OpenMP Potential Gain: 2.166s (2.7%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.6% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.108
    FP Arith/Mem Wr Instr. Ratio: 2.613
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 553 MB 
    Collection start time: 01:01:45 22/04/2021 UTC
    Collection stop time: 01:03:06 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_80 > lavaMD-log/vtune/36_80_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_80 --  lavaMD -cores 18 -boxes1d 80 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_80 -command stop.
Configuration used: cores = 18, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.083883002400 s,  0.057767551392 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
145.123916625977 s, 99.942230224609 % : CPU/MCPU: KERNEL
Total time:
145.207809448242 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-6657-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-6657-quartz3070.sc' filevtune: Executing actions 12 % Loading '6657-6662.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-6662-e36b7190.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libstlport-dynamic.so'vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/pinruntime/libstlport-dynamic.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 20 % Resolving information for `libpthread.so.0'      vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `pinbin'               vtune: Executing actions 21 % Resolving information for `pinbin'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/bin64/pinbin'.
vtune: Executing actions 22 % Resolving information for `pinbin'               vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 150.075s
    Paused Time: 0s
Effective CPU Utilization: 23.9% (17.211 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 150.075
        Serial Time (outside parallel regions): 5.004s (3.3%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                3.069s
            rand                        libc.so.6             1.251s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.020s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 145.072s (96.7%)
            Estimated Ideal Time: 143.222s (95.4%)
            OpenMP Potential Gain: 1.850s (1.2%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 35.640s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                25.042s                        100.0%          32
        Condition Variable 0x8c09b9c8                                10.597s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Mutex 0x6cb3026d                                              0.000s                        100.0%           2
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 4.390s (0.2% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.120s                  0.1%
        __kmp_join_call       libiomp5.so                  0.710s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.510s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 53 MB 
    Collection start time: 01:04:04 22/04/2021 UTC
    Collection stop time: 01:06:34 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_80 > lavaMD-log/vtune/18_80_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_80 --  lavaMD -cores 18 -boxes1d 80 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_80 -command stop.
Configuration used: cores = 18, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.071107998490 s,  0.048596568406 % : MCPU: SET DEVICE
 0.000001000000 s,  0.000000683419 % : CPU/MCPU: INPUTS
146.251968383789 s, 99.951393127441 % : CPU/MCPU: KERNEL
Total time:
146.323089599609 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-6878-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-6878-quartz3070.sc' filevtune: Executing actions 12 % Loading '6892.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-6892-062a562b.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 151.285s
    SP GFLOPS: 0.000
    DP GFLOPS: 28.062
    x87 GFLOPS: 0.000
    CPI Rate: 0.413
    Average CPU Frequency: 2.596 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 47.5% (17.094 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.7% (17.094 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 5.121s (3.4%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              2.456s
        [Loop@0x401849 in main]     lavaMD                 0.922s
        random_r                    libc-2.17.so           0.491s
        random                      libc-2.17.so           0.411s
        [Loop@0x40197e in main]     lavaMD                 0.221s
        [Others]                    N/A                    0.461s
    Parallel Region Time: 146.164s (96.6%)
        Estimated Ideal Time: 144.295s (95.4%)
        OpenMP Potential Gain: 1.869s (1.2%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.114
    FP Arith/Mem Wr Instr. Ratio: 2.629
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 540 MB 
    Collection start time: 01:06:56 22/04/2021 UTC
    Collection stop time: 01:09:28 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_80 > lavaMD-log/vtune/18_80_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_80 --  lavaMD -cores 9 -boxes1d 80 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_80 -command stop.
Configuration used: cores = 9, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.092785000801 s,  0.034315995872 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
270.291320800781 s, 99.965690612793 % : CPU/MCPU: KERNEL
Total time:
270.384094238281 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-7158-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-7158-quartz3070.sc' filevtune: Executing actions 12 % Loading '7158-7163.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-7163-969181bb.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 275.152s
    Paused Time: 0s
Effective CPU Utilization: 12.0% (8.649 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 275.152
        Serial Time (outside parallel regions): 4.884s (1.8%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                2.969s
            rand                        libc.so.6             1.311s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.020s
        Parallel Region Time: 270.268s (98.2%)
            Estimated Ideal Time: 263.938s (95.9%)
            OpenMP Potential Gain: 6.331s (2.3%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 57.712s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                44.760s                        100.0%          14
        Condition Variable 0x8c09b9c8                                12.952s                        100.0%           3
        Stream 0x14cedaf4                                             0.001s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 2.430s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.590s                  0.1%
        __kmp_join_call       libiomp5.so                  0.600s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 48 MB 
    Collection start time: 01:10:25 22/04/2021 UTC
    Collection stop time: 01:15:00 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_80 > lavaMD-log/vtune/9_80_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_80 --  lavaMD -cores 9 -boxes1d 80 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_80 -command stop.
Configuration used: cores = 9, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.072448000312 s,  0.026456903666 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
273.761566162109 s, 99.973541259766 % : CPU/MCPU: KERNEL
Total time:
273.834014892578 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-7471-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-7471-quartz3070.sc' filevtune: Executing actions 12 % Loading '7485.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-7485-9d6a1b63.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-2.17.so'           vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 278.627s
    SP GFLOPS: 0.000
    DP GFLOPS: 15.219
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.833 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.6% (8.483 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.8% (8.519 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 4.911s (1.8%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              2.501s
        [Loop@0x401849 in main]     lavaMD                 0.807s
        random_r                    libc-2.17.so           0.571s
        random                      libc-2.17.so           0.431s
        [Loop@0x40197e in main]     lavaMD                 0.195s
        [Others]                    N/A                    0.276s
    Parallel Region Time: 273.716s (98.2%)
        Estimated Ideal Time: 267.773s (96.1%)
        OpenMP Potential Gain: 5.943s (2.1%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.113
    FP Arith/Mem Wr Instr. Ratio: 2.628
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 574 MB 
    Collection start time: 01:15:21 22/04/2021 UTC
    Collection stop time: 01:20:00 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_80 > lavaMD-log/vtune/9_80_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_80 --  lavaMD -cores 4 -boxes1d 80 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_80 -command stop.
Configuration used: cores = 4, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.082148000598 s,  0.014622132294 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
561.723754882812 s, 99.985382080078 % : CPU/MCPU: KERNEL
Total time:
561.805908203125 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-7849-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-7849-quartz3070.sc' filevtune: Executing actions 12 % Loading '7849-7854.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-7854-f2f8acbd.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 566.504s
    Paused Time: 0s
Effective CPU Utilization: 5.3% (3.851 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 566.504
        Serial Time (outside parallel regions): 4.784s (0.8%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                3.128s
            rand                        libc.so.6             1.162s
            [Outside any known module]  [Unknown]             0.040s
            func@0x401390               lavaMD                0.040s
            ompc_set_num_threads        libiomp5.so           0.030s
            __kmp_fork_call             libiomp5.so           0.012s
        Parallel Region Time: 561.720s (99.2%)
            Estimated Ideal Time: 544.333s (96.1%)
            OpenMP Potential Gain: 17.388s (3.1%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 69.690s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                35.282s                        100.0%           3
        Condition Variable 0x8c09b9c8                                34.407s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.732s (0.0% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.490s                  0.0%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.012s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 44 MB 
    Collection start time: 01:20:58 22/04/2021 UTC
    Collection stop time: 01:30:24 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_80 > lavaMD-log/vtune/4_80_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_80 --  lavaMD -cores 4 -boxes1d 80 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_80 -command stop.
Configuration used: cores = 4, boxes1d = 80
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.060309998691 s,  0.010691666044 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
564.023925781250 s, 99.989311218262 % : CPU/MCPU: KERNEL
Total time:
564.084228515625 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-8399-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-8399-quartz3070.sc' filevtune: Executing actions 12 % Loading '8414.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-8414-98f65c2e.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 568.860s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.475
    x87 GFLOPS: 0.000
    CPI Rate: 0.412
    Average CPU Frequency: 3.096 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.5% (3.798 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.3% (3.800 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 4.861s (0.9%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              2.300s
        [Loop@0x401849 in main]     lavaMD                 0.757s
        random_r                    libc-2.17.so           0.581s
        random                      libc-2.17.so           0.521s
        [Loop@0x40197e in main]     lavaMD                 0.195s
        [Others]                    N/A                    0.381s
    Parallel Region Time: 563.999s (99.1%)
        Estimated Ideal Time: 550.563s (96.8%)
        OpenMP Potential Gain: 13.436s (2.4%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 100.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.1% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 65.9% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.117
    FP Arith/Mem Wr Instr. Ratio: 2.631
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "80" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 552 MB 
    Collection start time: 01:30:45 22/04/2021 UTC
    Collection stop time: 01:40:14 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_80 > lavaMD-log/vtune/4_80_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_80'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_90 --  lavaMD -cores 36 -boxes1d 90 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_90 -command stop.
Configuration used: cores = 36, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.084489002824 s,  0.079846456647 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
105.729843139648 s, 99.920150756836 % : CPU/MCPU: KERNEL
Total time:
105.814338684082 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-9161-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-9161-quartz3070.sc' filevtune: Executing actions 12 % Loading '9161-9166.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-9166-fcbe4b72.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `libc.so.6'            
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 112.683s
    Paused Time: 0s
Effective CPU Utilization: 45.9% (33.077 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 112.683
        Serial Time (outside parallel regions): 7.053s (6.3%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module           Serial CPU Time
            --------------------------  ---------------  ---------------
            main                        lavaMD                    4.481s
            rand                        libc.so.6                 1.579s
            func@0x401390               lavaMD                    0.070s
            [Outside any known module]  [Unknown]                 0.040s
            ompc_set_num_threads        libiomp5.so               0.040s
            __pthread_create_2_1        libpthread.so.0           0.010s
        Parallel Region Time: 105.630s (93.7%)
            Estimated Ideal Time: 103.316s (91.7%)
            OpenMP Potential Gain: 2.314s (2.1%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 95.546s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                79.044s                        100.0%          66
        Condition Variable 0x8c09b9c8                                14.948s                        100.0%           3
        Condition Variable 0x02215239                                 1.553s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           9
    Spin and Overhead Time: 9.380s (0.3% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module           Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  ---------------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                      6.680s                  0.2%
        __kmp_join_barrier    libiomp5.so                      1.900s                  0.1%
        __kmp_join_call       libiomp5.so                      0.750s                  0.0%
        ompc_set_num_threads  libiomp5.so                      0.040s                  0.0%
        __pthread_create_2_1  libpthread.so.0                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 75 MB 
    Collection start time: 01:41:12 22/04/2021 UTC
    Collection stop time: 01:43:04 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_90 > lavaMD-log/vtune/36_90_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_90 --  lavaMD -cores 36 -boxes1d 90 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_90 -command stop.
Configuration used: cores = 36, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.062435999513 s,  0.057920340449 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
107.733886718750 s, 99.942085266113 % : CPU/MCPU: KERNEL
Total time:
107.796318054199 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-9374-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-9374-quartz3070.sc' filevtune: Executing actions 12 % Loading '9388.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-9388-5d6663b8.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 115.158s
    SP GFLOPS: 0.000
    DP GFLOPS: 52.433
    x87 GFLOPS: 0.000
    CPI Rate: 0.421
    Average CPU Frequency: 2.596 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 89.8% (32.317 out of 36)
    Effective Logical Core Utilization: 45.4% (32.663 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 7.610s (6.6%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              3.859s
        [Loop@0x401849 in main]     lavaMD                 1.113s
        random_r                    libc-2.17.so           0.912s
        random                      libc-2.17.so           0.762s
        rand                        libc-2.17.so           0.281s
        [Others]                    N/A                    0.441s
    Parallel Region Time: 107.547s (93.4%)
        Estimated Ideal Time: 104.958s (91.1%)
        OpenMP Potential Gain: 2.589s (2.2%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.6% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.8% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.2% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.109
    FP Arith/Mem Wr Instr. Ratio: 2.616
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 669 MB 
    Collection start time: 01:43:30 22/04/2021 UTC
    Collection stop time: 01:45:25 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_90 > lavaMD-log/vtune/36_90_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_90 --  lavaMD -cores 18 -boxes1d 90 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_90 -command stop.
Configuration used: cores = 18, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.082438997924 s,  0.036182753742 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
227.758163452148 s, 99.963821411133 % : CPU/MCPU: KERNEL
Total time:
227.840591430664 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-9645-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-9645-quartz3070.sc' filevtune: Executing actions 12 % Loading '9645-9650.0.trace' file                 vtune: Executing actions 12 % Loading 'userapicollector-9650-8ad954cf.trace' fivtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' 
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 234.935s
    Paused Time: 0s
Effective CPU Utilization: 22.0% (15.857 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 234.935
        Serial Time (outside parallel regions): 7.228s (3.1%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                4.680s
            rand                        libc.so.6             1.650s
            func@0x401390               lavaMD                0.050s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
        Parallel Region Time: 227.707s (96.9%)
            Estimated Ideal Time: 206.591s (87.9%)
            OpenMP Potential Gain: 21.116s (9.0%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 386.267s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                               350.795s                        100.0%          31
        Condition Variable 0x8c09b9c8                                35.471s                        100.0%           3
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 4.260s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.230s                  0.1%
        __kmp_join_call       libiomp5.so                  0.600s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.390s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 75 MB 
    Collection start time: 01:46:31 22/04/2021 UTC
    Collection stop time: 01:50:27 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_90 > lavaMD-log/vtune/18_90_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_90 --  lavaMD -cores 18 -boxes1d 90 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_90 -command stop.
Configuration used: cores = 18, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.062899999321 s,  0.030165785924 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
208.451477050781 s, 99.969833374023 % : CPU/MCPU: KERNEL
Total time:
208.514373779297 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-9941-quartz3070.sc' filevtune: Executing actions 12 % Loading 'systemcollector-9941-quartz3070.sc' filevtune: Executing actions 12 % Loading '9955.perf' file                         vtune: Executing actions 12 % Loading 'userapicollector-9955-03de5e98.trace' fivtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread-2.17.so'   vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 215.264s
    SP GFLOPS: 0.000
    DP GFLOPS: 28.178
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.597 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 47.6% (17.147 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.8% (17.156 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 6.918s (3.2%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              3.368s
        [Loop@0x401849 in main]     lavaMD                 1.103s
        random                      libc-2.17.so           0.752s
        random_r                    libc-2.17.so           0.712s
        [Loop@0x40197e in main]     lavaMD                 0.241s
        [Others]                    N/A                    0.531s
    Parallel Region Time: 208.345s (96.8%)
        Estimated Ideal Time: 206.094s (95.7%)
        OpenMP Potential Gain: 2.251s (1.0%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.115
    FP Arith/Mem Wr Instr. Ratio: 2.631
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 642 MB 
    Collection start time: 01:50:52 22/04/2021 UTC
    Collection stop time: 01:54:27 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_90 > lavaMD-log/vtune/18_90_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_90 --  lavaMD -cores 9 -boxes1d 90 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_90 -command stop.
Configuration used: cores = 9, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.082530997694 s,  0.021513815969 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
383.536071777344 s, 99.978485107422 % : CPU/MCPU: KERNEL
Total time:
383.618591308594 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-10272-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-10272-quartz3070.sc' filvtune: Executing actions 12 % Loading '10272-10277.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-10277-c549694c.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 390.316s
    Paused Time: 0s
Effective CPU Utilization: 12.0% (8.665 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 390.316
        Serial Time (outside parallel regions): 6.798s (1.7%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                4.409s
            rand                        libc.so.6             1.671s
            [Outside any known module]  [Unknown]             0.040s
            func@0x401390               lavaMD                0.040s
            ompc_set_num_threads        libiomp5.so           0.030s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 383.518s (98.3%)
            Estimated Ideal Time: 375.111s (96.1%)
            OpenMP Potential Gain: 8.407s (2.2%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 77.413s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                54.960s                        100.0%          15
        Condition Variable 0x8c09b9c8                                22.452s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 2.090s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.398s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.412s                  0.0%
        __kmp_join_call       libiomp5.so                  0.240s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 68 MB 
    Collection start time: 01:55:30 22/04/2021 UTC
    Collection stop time: 02:02:00 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_90 > lavaMD-log/vtune/9_90_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_90 --  lavaMD -cores 9 -boxes1d 90 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_90 -command stop.
Configuration used: cores = 9, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.059193000197 s,  0.015196854249 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
389.449035644531 s, 99.984802246094 % : CPU/MCPU: KERNEL
Total time:
389.508209228516 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-10707-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-10707-quartz3070.sc' filvtune: Executing actions 12 % Loading '10722.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-10722-93255a8f.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 396.940s
    SP GFLOPS: 0.000
    DP GFLOPS: 15.253
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.842 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.6% (8.482 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.8% (8.505 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 7.544s (1.9%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              3.478s
        [Loop@0x401849 in main]     lavaMD                 1.243s
        random_r                    libc-2.17.so           0.882s
        random                      libc-2.17.so           0.812s
        [Loop@0x40197e in main]     lavaMD                 0.421s
        [Others]                    N/A                    0.531s
    Parallel Region Time: 389.396s (98.1%)
        Estimated Ideal Time: 381.128s (96.0%)
        OpenMP Potential Gain: 8.268s (2.1%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.0% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.113
    FP Arith/Mem Wr Instr. Ratio: 2.624
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 644 MB 
    Collection start time: 02:02:25 22/04/2021 UTC
    Collection stop time: 02:09:02 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_90 > lavaMD-log/vtune/9_90_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_90 --  lavaMD -cores 4 -boxes1d 90 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_90 -command stop.
Configuration used: cores = 4, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.083681002259 s,  0.010304178111 % : MCPU: SET DEVICE
 0.000001000000 s,  0.000000123136 % : CPU/MCPU: INPUTS
812.023803710938 s, 99.989692687988 % : CPU/MCPU: KERNEL
Total time:
812.107543945312 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-11191-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-11191-quartz3070.sc' filvtune: Executing actions 12 % Loading '11191-11196.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-11196-2f6481cd.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `lavaMD'               
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 818.907s
    Paused Time: 0s
Effective CPU Utilization: 5.3% (3.828 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 818.907
        Serial Time (outside parallel regions): 6.885s (0.8%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                4.480s
            rand                        libc.so.6             1.640s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
            func@0x401390               lavaMD                0.030s
            __kmp_fork_call             libiomp5.so           0.011s
        Parallel Region Time: 812.022s (99.2%)
            Estimated Ideal Time: 782.110s (95.5%)
            OpenMP Potential Gain: 29.912s (3.7%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 120.606s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                61.087s                        100.0%           3
        Condition Variable 0x8c09b9c8                                59.518s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.841s (0.0% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.600s                  0.0%
        __kmp_join_call       libiomp5.so                  0.190s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.011s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 63 MB 
    Collection start time: 02:10:07 22/04/2021 UTC
    Collection stop time: 02:23:47 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_90 > lavaMD-log/vtune/4_90_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_90 --  lavaMD -cores 4 -boxes1d 90 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_90 -command stop.
Configuration used: cores = 4, boxes1d = 90
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.055344000459 s,  0.006902326830 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
801.761230468750 s, 99.993095397949 % : CPU/MCPU: KERNEL
Total time:
801.816589355469 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-11951-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-11951-quartz3070.sc' filvtune: Executing actions 12 % Loading '11965.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-11965-93183241.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 809.684s
    SP GFLOPS: 0.000
    DP GFLOPS: 7.494
    x87 GFLOPS: 0.000
    CPI Rate: 0.412
    Average CPU Frequency: 3.122 GHz 
    Total Thread Count: 4
Effective Physical Core Utilization: 10.5% (3.776 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 5.2% (3.777 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 7.946s (1.0%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              3.648s
        [Loop@0x401849 in main]     lavaMD                 1.283s
        random_r                    libc-2.17.so           1.103s
        random                      libc-2.17.so           0.782s
        rand                        libc-2.17.so           0.371s
        [Others]                    N/A                    0.611s
    Parallel Region Time: 801.739s (99.0%)
        Estimated Ideal Time: 778.550s (96.2%)
        OpenMP Potential Gain: 23.188s (2.9%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.4% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 100.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.117
    FP Arith/Mem Wr Instr. Ratio: 2.630
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "90" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 617 MB 
    Collection start time: 02:24:10 22/04/2021 UTC
    Collection stop time: 02:37:40 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_4_90 > lavaMD-log/vtune/4_90_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_90'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_36_100 --  lavaMD -cores 36 -boxes1d 100 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_100 -command stop.
Configuration used: cores = 36, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.083526998758 s,  0.057792272419 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
144.446166992188 s, 99.942199707031 % : CPU/MCPU: KERNEL
Total time:
144.529693603516 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-12969-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-12969-quartz3070.sc' filvtune: Executing actions 12 % Loading '12969-12975.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-12975-8fb4fb8b.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 154.101s
    Paused Time: 0s
Effective CPU Utilization: 46.1% (33.218 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 154.101
        Serial Time (outside parallel regions): 9.778s (6.3%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                6.100s
            rand                        libc.so.6             2.280s
            func@0x401390               lavaMD                0.060s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
        Parallel Region Time: 144.323s (93.7%)
            Estimated Ideal Time: 141.897s (92.1%)
            OpenMP Potential Gain: 2.426s (1.6%)
    Total Thread Count: 36
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 111.255s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                93.043s                        100.0%          71
        Condition Variable 0x8c09b9c8                                18.211s                        100.0%           2
        Stream 0x14cedaf4                                             0.001s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           6
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 9.180s (0.2% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  6.940s                  0.1%
        __kmp_join_barrier    libiomp5.so                  1.800s                  0.0%
        __kmp_join_call       libiomp5.so                  0.400s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 102 MB 
    Collection start time: 02:38:41 22/04/2021 UTC
    Collection stop time: 02:41:15 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_36_100 > lavaMD-log/vtune/36_100_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_36_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_36_100 --  lavaMD -cores 36 -boxes1d 100 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_100 -command stop.
Configuration used: cores = 36, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.054090000689 s,  0.036744065583 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
147.153350830078 s, 99.963256835938 % : CPU/MCPU: KERNEL
Total time:
147.207443237305 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-13241-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-13241-quartz3070.sc' filvtune: Executing actions 12 % Loading '13256.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-13256-7a102342.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 156.700s
    SP GFLOPS: 0.000
    DP GFLOPS: 53.135
    x87 GFLOPS: 0.000
    CPI Rate: 0.418
    Average CPU Frequency: 2.596 GHz 
    Total Thread Count: 36
Effective Physical Core Utilization: 90.7% (32.643 out of 36)
    Effective Logical Core Utilization: 45.5% (32.776 out of 72)
     | The metric value is low, which may signal a poor utilization of logical
     | CPU cores while the utilization of physical cores is acceptable. Consider
     | using logical cores, which in some cases can improve processor throughput
     | and overall performance of multi-threaded applications.
     |
    Serial Time (outside parallel regions): 9.737s (6.2%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              4.916s
        [Loop@0x401849 in main]     lavaMD                 1.579s
        random_r                    libc-2.17.so           1.173s
        random                      libc-2.17.so           0.842s
        [Loop@0x40197e in main]     lavaMD                 0.316s
        [Others]                    N/A                    0.616s
    Parallel Region Time: 146.963s (93.8%)
        Estimated Ideal Time: 143.304s (91.5%)
        OpenMP Potential Gain: 3.658s (2.3%)
Memory Bound: 9.5% of Pipeline Slots
    Cache Bound: 5.6% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 33.9% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.1% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.113
    FP Arith/Mem Wr Instr. Ratio: 2.623
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "36" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 706 MB 
    Collection start time: 02:41:45 22/04/2021 UTC
    Collection stop time: 02:44:22 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_36_100 > lavaMD-log/vtune/36_100_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_36_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_18_100 --  lavaMD -cores 18 -boxes1d 100 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_100 -command stop.
Configuration used: cores = 18, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.078736998141 s,  0.027545480058 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
285.764862060547 s, 99.972450256348 % : CPU/MCPU: KERNEL
Total time:
285.843627929688 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-13550-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-13550-quartz3070.sc' filvtune: Executing actions 12 % Loading '13550-13555.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-13555-1480a081.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 295.814s
    Paused Time: 0s
Effective CPU Utilization: 23.8% (17.131 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 295.814
        Serial Time (outside parallel regions): 10.099s (3.4%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                6.430s
            rand                        libc.so.6             2.460s
            func@0x401390               lavaMD                0.060s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.030s
            __kmp_fork_call             libiomp5.so           0.010s
        Parallel Region Time: 285.715s (96.6%)
            Estimated Ideal Time: 281.014s (95.0%)
            OpenMP Potential Gain: 4.700s (1.6%)
    Total Thread Count: 18
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 95.546s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                75.405s                        100.0%          33
        Condition Variable 0x8c09b9c8                                20.141s                        100.0%           2
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Mutex 0x6cb3026d                                              0.000s                        100.0%           2
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 4.110s (0.1% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  3.270s                  0.1%
        __kmp_join_barrier    libiomp5.so                  0.400s                  0.0%
        __kmp_join_call       libiomp5.so                  0.390s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.020s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 100 MB 
    Collection start time: 02:45:30 22/04/2021 UTC
    Collection stop time: 02:50:26 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_18_100 > lavaMD-log/vtune/18_100_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_18_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_18_100 --  lavaMD -cores 18 -boxes1d 100 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_100 -command stop.
Configuration used: cores = 18, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.053018998355 s,  0.018499655649 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
286.541503906250 s, 99.981498718262 % : CPU/MCPU: KERNEL
Total time:
286.594512939453 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-13907-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-13907-quartz3070.sc' filvtune: Executing actions 12 % Loading '13921.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-13921-d0a0791e.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving information for `libiomp5.so'          vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 297.016s
    SP GFLOPS: 0.000
    DP GFLOPS: 28.071
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.595 GHz 
    Total Thread Count: 18
Effective Physical Core Utilization: 47.5% (17.102 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 23.8% (17.104 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 10.578s (3.6%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              4.751s
        [Loop@0x401849 in main]     lavaMD                 1.924s
        random_r                    libc-2.17.so           1.413s
        random                      libc-2.17.so           1.022s
        [Loop@0x40197e in main]     lavaMD                 0.406s
        [Others]                    N/A                    0.857s
    Parallel Region Time: 286.438s (96.4%)
        Estimated Ideal Time: 283.464s (95.4%)
        OpenMP Potential Gain: 2.974s (1.0%)
Memory Bound: 9.4% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.115
    FP Arith/Mem Wr Instr. Ratio: 2.631
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "18" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 686 MB 
    Collection start time: 02:50:55 22/04/2021 UTC
    Collection stop time: 02:55:52 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_18_100 > lavaMD-log/vtune/18_100_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_18_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_9_100 --  lavaMD -cores 9 -boxes1d 100 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_100 -command stop.
Configuration used: cores = 9, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.072548002005 s,  0.013718537055 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
528.759338378906 s, 99.986282348633 % : CPU/MCPU: KERNEL
Total time:
528.831909179688 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-14372-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-14372-quartz3070.sc' filvtune: Executing actions 12 % Loading '14372-14378.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-14378-602ad7f3.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for `libdl.so.2'           vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libc-dynamic.so'      vtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/pinruntime/libc-dynamic.so'.
vtune: Executing actions 19 % Resolving information for `libpin3dwarf.so'      vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for dangling locations     vtune: Executing actions 20 % Resolving information for `ld-linux-x86-64.so.2' vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       vtune: Executing actions 20 % Resolving information for `libpthread.so.0'      
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libpthread.so.0'      vtune: Executing actions 22 % Resolving information for `libpthread.so.0'      vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 537.998s
    Paused Time: 0s
Effective CPU Utilization: 12.1% (8.698 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 537.998
        Serial Time (outside parallel regions): 9.257s (1.7%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                6.070s
            rand                        libc.so.6             2.290s
            func@0x401390               lavaMD                0.060s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.030s
            [Others]                    N/A                   0.020s
        Parallel Region Time: 528.742s (98.3%)
            Estimated Ideal Time: 519.045s (96.5%)
            OpenMP Potential Gain: 9.697s (1.8%)
    Total Thread Count: 9
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 90.930s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                63.838s                        100.0%          12
        Condition Variable 0x8c09b9c8                                27.091s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           1
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           4
    Spin and Overhead Time: 1.870s (0.0% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  1.590s                  0.0%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        __kmp_join_barrier    libiomp5.so                  0.040s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.030s                  0.0%
        __kmp_fork_call       libiomp5.so                  0.010s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 93 MB 
    Collection start time: 02:56:59 22/04/2021 UTC
    Collection stop time: 03:05:58 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_9_100 > lavaMD-log/vtune/9_100_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_9_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_9_100 --  lavaMD -cores 9 -boxes1d 100 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_100 -command stop.
Configuration used: cores = 9, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: VARIABLES
 0.066742002964 s,  0.012484722771 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
534.522644042969 s, 99.987510681152 % : CPU/MCPU: KERNEL
Total time:
534.589355468750 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-14934-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-14934-quartz3070.sc' filvtune: Executing actions 12 % Loading '14950.perf' file                        vtune: Executing actions 12 % Loading 'userapicollector-14950-62c1b8cb.trace' fvtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libc-2.17.so'         vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libiomp5.so'          vtune: Executing actions 19 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 20 % Resolving information for `libittnotify_collector
vtune: Warning: Cannot locate debugging information for file `/usr/lib64/libc-2.17.so'.
Cannot match the module with the symbol file `/usr/lib/debug/usr/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 21 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving information for `libittnotify_collectorvtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving thread name information                vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 24 % Resolving call target names for dynamic code     vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 29 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 33 % Setting data model parameters                    vtune: Executing actions 34 % Setting data model parameters                    vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 34 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 39 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 41 % Discarding redundant overtime data               vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 42 % Saving the result                                vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 49 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 544.451s
    SP GFLOPS: 0.000
    DP GFLOPS: 15.291
    x87 GFLOPS: 0.000
    CPI Rate: 0.414
    Average CPU Frequency: 2.835 GHz 
    Total Thread Count: 9
Effective Physical Core Utilization: 23.7% (8.520 out of 36)
 | The metric value is low, which may signal a poor physical CPU cores
 | utilization caused by:
 |     - load imbalance
 |     - threading runtime overhead
 |     - contended synchronization
 |     - thread/process underutilization
 |     - incorrect affinity that utilizes logical cores instead of physical
 |       cores
 | Explore sub-metrics to estimate the efficiency of MPI and OpenMP parallelism
 | or run the Locks and Waits analysis to identify parallel bottlenecks for
 | other parallel runtimes.
 |
    Effective Logical Core Utilization: 11.9% (8.547 out of 72)
     | The metric value is low, which may signal a poor logical CPU cores
     | utilization. Consider improving physical core utilization as the first
     | step and then look at opportunities to utilize logical cores, which in
     | some cases can improve processor throughput and overall performance of
     | multi-threaded applications.
     |
    Serial Time (outside parallel regions): 9.982s (1.8%)

        Top Serial Hotspots (outside parallel regions)
        Function                    Module        Serial CPU Time
        --------------------------  ------------  ---------------
        [Outside any known module]  [Unknown]              4.791s
        [Loop@0x401849 in main]     lavaMD                 1.804s
        random_r                    libc-2.17.so           1.123s
        random                      libc-2.17.so           0.892s
        rand                        libc-2.17.so           0.351s
        [Others]                    N/A                    0.802s
    Parallel Region Time: 534.469s (98.2%)
        Estimated Ideal Time: 525.339s (96.5%)
        OpenMP Potential Gain: 9.129s (1.7%)
Memory Bound: 9.3% of Pipeline Slots
    Cache Bound: 5.5% of Clockticks
    DRAM Bound: 0.1% of Clockticks
    NUMA: % of Remote Accesses: 0.0%
Vectorization: 0.0% of Packed FP Operations
 | A significant fraction of floating point arithmetic instructions are scalar.
 | Use Intel Advisor to see possible reasons why the code was not vectorized.
 |
    Instruction Mix
        SP FLOPs: 0.0% of uOps
            Packed: 0.0% from SP FP
                128-bit: 0.0% from SP FP
                256-bit: 0.0% from SP FP
            Scalar: 0.0% from SP FP
        DP FLOPs: 34.0% of uOps
            Packed: 0.0% from DP FP
                128-bit: 0.0% from DP FP
                256-bit: 0.0% from DP FP
            Scalar: 100.0% from DP FP
             | This code has floating point operations and is not vectorized.
             | Consider using Intel Advisor to vectorize the loops.
             |
        x87 FLOPs: 0.0% of uOps
        Non-FP: 66.0% of uOps
    FP Arith/Mem Rd Instr. Ratio: 1.113
    FP Arith/Mem Wr Instr. Ratio: 2.625
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "9" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 716 MB 
    Collection start time: 03:06:26 22/04/2021 UTC
    Collection stop time: 03:15:30 22/04/2021 UTC
    Collector Type: Driverless Perf per-process sampling
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_hpc_9_100 > lavaMD-log/vtune/9_100_hpc.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_9_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect threading -r lavaMD-log/vtune/lavaMD_tr_4_100 --  lavaMD -cores 4 -boxes1d 100 
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_100 -command stop.
Configuration used: cores = 4, boxes1d = 100
Time spent in different stages of CPU/MCPU KERNEL:
 0.000001000000 s,  0.000000089706 % : CPU/MCPU: VARIABLES
 0.074929997325 s,  0.006721666548 % : MCPU: SET DEVICE
 0.000000000000 s,  0.000000000000 % : CPU/MCPU: INPUTS
1114.678344726562 s, 99.993286132812 % : CPU/MCPU: KERNEL
Total time:
1114.753295898438 s
vtune: Collection stopped.
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions  0 % Finalizing the result                            vtune: Executing actions  0 % Clearing the database                            vtune: Executing actions  7 % Clearing the database                            vtune: Executing actions  7 % Loading raw data to the database                 vtune: Executing actions  7 % Loading 'systemcollector-15548-quartz3070.sc' filvtune: Executing actions 12 % Loading 'systemcollector-15548-quartz3070.sc' filvtune: Executing actions 12 % Loading '15548-15553.0.trace' file               vtune: Executing actions 12 % Loading 'userapicollector-15553-f6bee498.trace' fvtune: Executing actions 12 % Converting API Events to Waits                   vtune: Executing actions 12 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Updating precomputed scalar metrics              vtune: Executing actions 14 % Processing profile metrics and debug information vtune: Executing actions 19 % Processing profile metrics and debug information vtune: Executing actions 19 % Setting data model parameters                    vtune: Executing actions 19 % Resolving module symbols                         vtune: Executing actions 19 % Resolving information for dangling locations     vtune: Executing actions 19 % Resolving information for `libpthread.so.0'      vtune: Executing actions 19 % Resolving information for `lavaMD'               vtune: Executing actions 19 % Resolving information for `libittnotify_collectorvtune: Executing actions 19 % Resolving information for `libc.so.6'            vtune: Executing actions 19 % Resolving information for `libiomp5.so'          
vtune: Warning: Cannot locate debugging information for file `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD'.
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/runtime/libittnotify_collector.so'.
vtune: Executing actions 19 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/lib64/libc.so.6'.
Cannot match the module with the symbol file `/usr/lib/debug/lib64/libc-2.17.so.debug'. Make sure to specify the correct path to the symbol file in the Binary/Symbol Search list of directories.
vtune: Executing actions 20 % Resolving information for `libtpsstool.so'       
vtune: Warning: Cannot locate debugging information for file `/usr/tce/packages/vtune/vtune-2020.0/vtune_profiler_2020.0.0.605129/lib64/libtpsstool.so'.
vtune: Executing actions 21 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving information for `libtpsstool.so'       vtune: Executing actions 22 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving bottom user stack information          vtune: Executing actions 23 % Resolving sync object name information           vtune: Executing actions 24 % Resolving sync object name information           vtune: Executing actions 24 % Resolving thread name information                vtune: Executing actions 25 % Resolving thread name information                vtune: Executing actions 25 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Resolving call target names for dynamic code     vtune: Executing actions 26 % Processing profile metrics and debug information vtune: Executing actions 27 % Processing profile metrics and debug information vtune: Executing actions 28 % Processing profile metrics and debug information vtune: Executing actions 30 % Processing profile metrics and debug information vtune: Executing actions 31 % Processing profile metrics and debug information vtune: Executing actions 32 % Processing profile metrics and debug information vtune: Executing actions 33 % Processing profile metrics and debug information vtune: Executing actions 34 % Processing profile metrics and debug information vtune: Executing actions 35 % Processing profile metrics and debug information vtune: Executing actions 35 % Setting data model parameters                    vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 35 % Precomputing frequently used data                vtune: Executing actions 36 % Precomputing frequently used data                vtune: Executing actions 37 % Precomputing frequently used data                vtune: Executing actions 38 % Precomputing frequently used data                vtune: Executing actions 39 % Precomputing frequently used data                vtune: Executing actions 40 % Precomputing frequently used data                vtune: Executing actions 41 % Precomputing frequently used data                vtune: Executing actions 41 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Updating precomputed scalar metrics              vtune: Executing actions 42 % Discarding redundant overtime data               vtune: Executing actions 44 % Discarding redundant overtime data               vtune: Executing actions 44 % Saving the result                                vtune: Executing actions 46 % Saving the result                                vtune: Executing actions 48 % Saving the result                                vtune: Executing actions 50 % Saving the result                                vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              Elapsed Time: 1123.945s
    Paused Time: 0s
Effective CPU Utilization: 5.4% (3.857 out of 72 logical CPUs)
 | The metric value is low, which may signal a poor logical CPU cores
 | utilization caused by load imbalance, threading runtime overhead, contended
 | synchronization, or thread/process underutilization. Explore sub-metrics to
 | estimate the efficiency of MPI and OpenMP parallelism or run the Locks and
 | Waits analysis to identify parallel bottlenecks for other parallel runtimes.
 |
    OpenMP Analysis. Collection Time: 1,123.945
        Serial Time (outside parallel regions): 9.267s (0.8%)

            Top Serial Hotspots (outside parallel regions)
            Function                    Module       Serial CPU Time
            --------------------------  -----------  ---------------
            main                        lavaMD                5.919s
            rand                        libc.so.6             2.441s
            func@0x401390               lavaMD                0.080s
            [Outside any known module]  [Unknown]             0.040s
            ompc_set_num_threads        libiomp5.so           0.040s
        Parallel Region Time: 1114.678s (99.2%)
            Estimated Ideal Time: 1081.590s (96.2%)
            OpenMP Potential Gain: 33.088s (2.9%)
    Total Thread Count: 4
     | The number of threads in the application is significantly lower than the
     | number of logical cores on the machine. Check if it is resulted by thread
     | number hard coding that limits application scalability.
     |
        Thread Oversubscription: 0s (0.0% of CPU Time)
    Wait Time with poor CPU Utilization: 133.504s (100.0% of Wait Time)

        Top Waiting Objects
        Sync Object                      Wait Time with poor CPU Utilization  (% from Object Wait Time)(%)  Wait Count
        -------------------------------  -----------------------------------  ----------------------------  ----------
        Condition Variable 0x74c978ed                                67.228s                        100.0%           3
        Condition Variable 0x8c09b9c8                                66.275s                        100.0%           1
        Stream 0x14cedaf4                                             0.000s                        100.0%           1
        Stream /proc/cpuinfo 0xd02b7e51                               0.000s                        100.0%           2
        Stream /proc/meminfo 0x24ccb214                               0.000s                        100.0%           1
        [Others]                                                      0.000s                        100.0%           3
    Spin and Overhead Time: 0.650s (0.0% of CPU Time)

        Top Functions with Spin or Overhead Time
        Function              Module       Spin and Overhead Time  (% from CPU Time)(%)
        --------------------  -----------  ----------------------  --------------------
        __kmp_fork_barrier    libiomp5.so                  0.410s                  0.0%
        __kmp_join_call       libiomp5.so                  0.200s                  0.0%
        ompc_set_num_threads  libiomp5.so                  0.040s                  0.0%
Collection and Platform Info
    Application Command Line: lavaMD "-cores" "4" "-boxes1d" "100" 
    Operating System: 3.10.0-1160.15.2.1chaos.ch6.x86_64 NAME="Red Hat Enterprise Linux Server" VERSION="7.9 (Maipo)" ID="rhel" ID_LIKE="fedora" VARIANT="Server" VARIANT_ID="server" VERSION_ID="7.9" PRETTY_NAME="Red Hat Enterprise Linux Server 7.9 (Maipo)" ANSI_COLOR="0;31" CPE_NAME="cpe:/o:redhat:enterprise_linux:7.9:GA:server" HOME_URL="https://www.redhat.com/" BUG_REPORT_URL="https://bugzilla.redhat.com/"  REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7" REDHAT_BUGZILLA_PRODUCT_VERSION=7.9 REDHAT_SUPPORT_PRODUCT="Red Hat Enterprise Linux" REDHAT_SUPPORT_PRODUCT_VERSION="7.9"
    Computer Name: quartz3070
    Result Size: 85 MB 
    Collection start time: 03:16:39 22/04/2021 UTC
    Collection stop time: 03:35:23 22/04/2021 UTC
    Collector Type: User-mode sampling and tracing
    CPU
        Name: Intel(R) Xeon(R) Processor code named Broadwell
        Frequency: 2.095 GHz 
        Logical CPU Count: 72

If you want to skip descriptions of detected performance issues in the report,
enter: vtune -report summary -report-knob show-issues=false -r <my_result_dir>.
Alternatively, you may view the report in the csv format: vtune -report
<report_name> -format=csv.
vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune -report summary -format=csv -report-knob show-issues=false  -r lavaMD-log/vtune/lavaMD_tr_4_100 > lavaMD-log/vtune/4_100_tr.log 
vtune: Using result path `/usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_tr_4_100'
vtune: Executing actions  0 %                                                  vtune: Executing actions  0 % Finalizing results                               vtune: Executing actions 50 % Finalizing results                               vtune: Executing actions 50 % Generating a report                              vtune: Executing actions 50 % Setting data model parameters                    vtune: Executing actions 75 % Setting data model parameters                    vtune: Executing actions 75 % Generating a report                              vtune: Executing actions 100 % Generating a report                             vtune: Executing actions 100 % done                                            
Vtune command: vtune  -collect hpc-performance -r lavaMD-log/vtune/lavaMD_hpc_4_100 --  lavaMD -cores 4 -boxes1d 100 
vtune: Warning: Access to /proc/kallsyms file is limited. Consider changing /proc/sys/kernel/kptr_restrict to 0 to enable resolution of OS kernel and kernel module symbols.
vtune: Warning: To profile kernel modules during the session, make sure they are available in the /lib/modules/kernel_version/ location.
vtune: Warning: Consider reducing possible collection overhead by setting the /proc/sys/kernel/perf_event_paranoid value to 0 (or less).
vtune: Collection started. To stop the collection, either press CTRL-C or enter from another console window: vtune -r /usr/WS1/lin32/project/HPC-FAIR/rodinia_3.1/openmp/lavaMD/lavaMD-log/vtune/lavaMD_hpc_4_100 -command stop.
slurmstepd: error: *** JOB 6648799 ON quartz3070 CANCELLED AT 2021-04-21T20:39:59 DUE TO TIME LIMIT ***
